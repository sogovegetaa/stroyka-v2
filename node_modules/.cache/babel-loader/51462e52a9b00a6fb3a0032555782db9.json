{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\shop\\\\ProductsView.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // application\n\nimport Pagination from '../shared/Pagination';\nimport ProductCard from '../shared/ProductCard';\nimport { Filters16Svg, LayoutGrid16x16Svg, LayoutGridWithDetails16x16Svg, LayoutList16x16Svg } from '../../svg';\nimport { sidebarOpen } from '../../store/sidebar';\n\nclass ProductsView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setLayout = layout => {\n      this.setState(() => ({\n        layout\n      }));\n    };\n\n    this.handlePageChange = page => {\n      this.setState(() => ({\n        page\n      }));\n    };\n\n    this.state = {\n      page: 1\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          products = _this$props.products,\n          grid = _this$props.grid,\n          offcanvas = _this$props.offcanvas,\n          propsLayout = _this$props.layout,\n          sidebarOpen = _this$props.sidebarOpen;\n    const _this$state = this.state,\n          page = _this$state.page,\n          stateLayout = _this$state.layout;\n    const layout = stateLayout || propsLayout;\n    let viewModes = [{\n      key: 'grid',\n      title: 'Grid',\n      icon: React.createElement(LayoutGrid16x16Svg, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })\n    }, {\n      key: 'grid-with-features',\n      title: 'Grid With Features',\n      icon: React.createElement(LayoutGridWithDetails16x16Svg, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })\n    }, {\n      key: 'list',\n      title: 'List',\n      icon: React.createElement(LayoutList16x16Svg, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })\n    }];\n    viewModes = viewModes.map(viewMode => {\n      const className = classNames('layout-switcher__button', {\n        'layout-switcher__button--active': layout === viewMode.key\n      });\n      return React.createElement(\"button\", {\n        key: viewMode.key,\n        title: viewMode.title,\n        type: \"button\",\n        className: className,\n        onClick: () => this.setLayout(viewMode.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, viewMode.icon);\n    });\n    const productsList = products.map(product => React.createElement(\"div\", {\n      key: product.id,\n      className: \"products-list__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(ProductCard, {\n      product: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n    const viewOptionsClasses = classNames('view-options', {\n      'view-options--offcanvas--always': offcanvas === 'always',\n      'view-options--offcanvas--mobile': offcanvas === 'mobile'\n    });\n    return React.createElement(\"div\", {\n      className: \"products-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"products-view__options\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: viewOptionsClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"view-options__filters-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"filters-button\",\n      onClick: () => sidebarOpen(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Filters16Svg, {\n      className: \"filters-button__icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"filters-button__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Filters\"), React.createElement(\"span\", {\n      className: \"filters-button__counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"3\"))), React.createElement(\"div\", {\n      className: \"view-options__layout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"layout-switcher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"layout-switcher__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, viewModes))), React.createElement(\"div\", {\n      className: \"view-options__legend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Showing 6 of 98 products\"), React.createElement(\"div\", {\n      className: \"view-options__divider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"view-options__control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"view-options-sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Sort By\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      name: \"\",\n      id: \"view-options-sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Default\"), React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Name (A-Z)\")))), React.createElement(\"div\", {\n      className: \"view-options__control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"view-options-limit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Show\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      name: \"\",\n      id: \"view-options-limit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"12\"), React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"24\")))))), React.createElement(\"div\", {\n      className: \"products-view__list products-list\",\n      \"data-layout\": layout !== 'list' ? grid : layout,\n      \"data-with-features\": layout === 'grid-with-features' ? 'true' : 'false',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"products-list__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, productsList)), React.createElement(\"div\", {\n      className: \"products-view__pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      current: page,\n      siblings: 2,\n      total: 10,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })));\n  }\n\n}\n\nProductsView.propTypes = {\n  /**\n   * array of product objects\n   */\n  products: PropTypes.array,\n\n  /**\n   * products list layout (default: 'grid')\n   * one of ['grid', 'grid-with-features', 'list']\n   */\n  layout: PropTypes.oneOf(['grid', 'grid-with-features', 'list']),\n\n  /**\n   * products list layout (default: 'grid')\n   * one of ['grid-3-sidebar', 'grid-4-full', 'grid-5-full']\n   */\n  grid: PropTypes.oneOf(['grid-3-sidebar', 'grid-4-full', 'grid-5-full']),\n\n  /**\n   * indicates when sidebar bar should be off canvas\n   */\n  offcanvas: PropTypes.oneOf(['always', 'mobile'])\n};\nProductsView.defaultProps = {\n  products: [],\n  layout: 'grid',\n  grid: 'grid-3-sidebar',\n  offcanvas: 'mobile'\n};\nconst mapDispatchToProps = {\n  sidebarOpen\n};\nexport default connect(() => ({}), mapDispatchToProps)(ProductsView);","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\shop\\ProductsView.jsx"],"names":["React","Component","classNames","PropTypes","connect","Pagination","ProductCard","Filters16Svg","LayoutGrid16x16Svg","LayoutGridWithDetails16x16Svg","LayoutList16x16Svg","sidebarOpen","ProductsView","constructor","props","setLayout","layout","setState","handlePageChange","page","state","render","products","grid","offcanvas","propsLayout","stateLayout","viewModes","key","title","icon","map","viewMode","className","productsList","product","id","viewOptionsClasses","propTypes","array","oneOf","defaultProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// application\nimport Pagination from '../shared/Pagination';\nimport ProductCard from '../shared/ProductCard';\nimport {\n    Filters16Svg,\n    LayoutGrid16x16Svg,\n    LayoutGridWithDetails16x16Svg,\n    LayoutList16x16Svg,\n} from '../../svg';\nimport { sidebarOpen } from '../../store/sidebar';\n\n\nclass ProductsView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 1,\n        };\n    }\n\n    setLayout = (layout) => {\n        this.setState(() => ({ layout }));\n    };\n\n    handlePageChange = (page) => {\n        this.setState(() => ({ page }));\n    };\n\n    render() {\n        const {\n            products,\n            grid,\n            offcanvas,\n            layout: propsLayout,\n            sidebarOpen,\n        } = this.props;\n        const { page, layout: stateLayout } = this.state;\n        const layout = stateLayout || propsLayout;\n\n        let viewModes = [\n            { key: 'grid', title: 'Grid', icon: <LayoutGrid16x16Svg /> },\n            { key: 'grid-with-features', title: 'Grid With Features', icon: <LayoutGridWithDetails16x16Svg /> },\n            { key: 'list', title: 'List', icon: <LayoutList16x16Svg /> },\n        ];\n\n        viewModes = viewModes.map((viewMode) => {\n            const className = classNames('layout-switcher__button', {\n                'layout-switcher__button--active': layout === viewMode.key,\n            });\n\n            return (\n                <button\n                    key={viewMode.key}\n                    title={viewMode.title}\n                    type=\"button\"\n                    className={className}\n                    onClick={() => this.setLayout(viewMode.key)}\n                >\n                    {viewMode.icon}\n                </button>\n            );\n        });\n\n        const productsList = products.map((product) => (\n            <div key={product.id} className=\"products-list__item\">\n                <ProductCard product={product} />\n            </div>\n        ));\n\n        const viewOptionsClasses = classNames('view-options', {\n            'view-options--offcanvas--always': offcanvas === 'always',\n            'view-options--offcanvas--mobile': offcanvas === 'mobile',\n        });\n\n        return (\n            <div className=\"products-view\">\n                <div className=\"products-view__options\">\n                    <div className={viewOptionsClasses}>\n                        <div className=\"view-options__filters-button\">\n                            <button type=\"button\" className=\"filters-button\" onClick={() => sidebarOpen()}>\n                                <Filters16Svg className=\"filters-button__icon\" />\n                                <span className=\"filters-button__title\">Filters</span>\n                                <span className=\"filters-button__counter\">3</span>\n                            </button>\n                        </div>\n                        <div className=\"view-options__layout\">\n                            <div className=\"layout-switcher\">\n                                <div className=\"layout-switcher__list\">\n                                    {viewModes}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"view-options__legend\">Showing 6 of 98 products</div>\n                        <div className=\"view-options__divider\" />\n                        <div className=\"view-options__control\">\n                            <label htmlFor=\"view-options-sort\">Sort By</label>\n                            <div>\n                                <select className=\"form-control form-control-sm\" name=\"\" id=\"view-options-sort\">\n                                    <option value=\"\">Default</option>\n                                    <option value=\"\">Name (A-Z)</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"view-options__control\">\n                            <label htmlFor=\"view-options-limit\">Show</label>\n                            <div>\n                                <select className=\"form-control form-control-sm\" name=\"\" id=\"view-options-limit\">\n                                    <option value=\"\">12</option>\n                                    <option value=\"\">24</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    className=\"products-view__list products-list\"\n                    data-layout={layout !== 'list' ? grid : layout}\n                    data-with-features={layout === 'grid-with-features' ? 'true' : 'false'}\n                >\n                    <div className=\"products-list__body\">\n                        {productsList}\n                    </div>\n                </div>\n\n                <div className=\"products-view__pagination\">\n                    <Pagination\n                        current={page}\n                        siblings={2}\n                        total={10}\n                        onPageChange={this.handlePageChange}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nProductsView.propTypes = {\n    /**\n     * array of product objects\n     */\n    products: PropTypes.array,\n    /**\n     * products list layout (default: 'grid')\n     * one of ['grid', 'grid-with-features', 'list']\n     */\n    layout: PropTypes.oneOf(['grid', 'grid-with-features', 'list']),\n    /**\n     * products list layout (default: 'grid')\n     * one of ['grid-3-sidebar', 'grid-4-full', 'grid-5-full']\n     */\n    grid: PropTypes.oneOf(['grid-3-sidebar', 'grid-4-full', 'grid-5-full']),\n    /**\n     * indicates when sidebar bar should be off canvas\n     */\n    offcanvas: PropTypes.oneOf(['always', 'mobile']),\n};\n\nProductsView.defaultProps = {\n    products: [],\n    layout: 'grid',\n    grid: 'grid-3-sidebar',\n    offcanvas: 'mobile',\n};\n\nconst mapDispatchToProps = {\n    sidebarOpen,\n};\n\nexport default connect(\n    () => ({}),\n    mapDispatchToProps,\n)(ProductsView);\n"]},"metadata":{},"sourceType":"module"}