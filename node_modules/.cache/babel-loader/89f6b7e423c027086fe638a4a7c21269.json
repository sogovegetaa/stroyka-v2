{"ast":null,"code":"import * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n\n(function (DisplayName) {\n  DisplayName[\"formatDate\"] = \"FormattedDate\";\n  DisplayName[\"formatTime\"] = \"FormattedTime\";\n  DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n})(DisplayName || (DisplayName = {}));\n\nexport default function createFormattedComponent(name) {\n  const Component = props => React.createElement(Context.Consumer, null, intl => {\n    invariantIntlContext(intl);\n    const formattedValue = intl[name](props.value, props);\n\n    if (typeof props.children === 'function') {\n      return props.children(formattedValue);\n    }\n\n    const Text = intl.textComponent || React.Fragment;\n    return React.createElement(Text, null, formattedValue);\n  });\n\n  Component.displayName = DisplayName[name];\n  return Component;\n}","map":null,"metadata":{},"sourceType":"module"}