{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\blocks\\\\BlockPosts.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport PropTypes from 'prop-types'; // application\n\nimport BlockHeader from '../shared/BlockHeader';\nimport PostCard from '../shared/PostCard';\nimport SlickWithPreventSwipeClick from '../shared/SlickWithPreventSwipeClick';\nconst slickSettings = {\n  'grid-nl': {\n    dots: false,\n    arrows: false,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    responsive: [{\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2\n      }\n    }, {\n      breakpoint: 767,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  },\n  'list-sm': {\n    dots: false,\n    arrows: false,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 2,\n    slidesToScroll: 2,\n    responsive: [{\n      breakpoint: 991,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  }\n};\nexport default class BlockPosts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNextClick = () => {\n      if (this.slickRef) {\n        this.slickRef.slickNext();\n      }\n    };\n\n    this.handlePrevClick = () => {\n      if (this.slickRef) {\n        this.slickRef.slickPrev();\n      }\n    };\n\n    this.setSlickRef = ref => {\n      this.slickRef = ref;\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          layout = _this$props.layout,\n          posts = _this$props.posts;\n    const postsList = posts.map(post => React.createElement(PostCard, {\n      key: post.id,\n      post: post,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"block block-posts block-posts--layout--\".concat(layout),\n      \"data-layout\": layout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(BlockHeader, {\n      arrows: true,\n      title: title,\n      onNext: this.handleNextClick,\n      onPrev: this.handlePrevClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"block-posts__slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(SlickWithPreventSwipeClick, Object.assign({\n      ref: this.setSlickRef\n    }, slickSettings[layout], {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), postsList))));\n  }\n\n}\nBlockPosts.propTypes = {\n  title: PropTypes.string.isRequired,\n  layout: PropTypes.oneOf(['list-sm', 'grid-nl']),\n  posts: PropTypes.array\n};\nBlockPosts.defaultProps = {\n  layout: 'list-sm',\n  posts: []\n};","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\blocks\\BlockPosts.jsx"],"names":["React","Component","PropTypes","BlockHeader","PostCard","SlickWithPreventSwipeClick","slickSettings","dots","arrows","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","BlockPosts","handleNextClick","slickRef","slickNext","handlePrevClick","slickPrev","setSlickRef","ref","render","props","title","layout","posts","postsList","map","post","id","propTypes","string","isRequired","oneOf","array","defaultProps"],"mappings":"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","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport PropTypes from 'prop-types';\n\n// application\nimport BlockHeader from '../shared/BlockHeader';\nimport PostCard from '../shared/PostCard';\nimport SlickWithPreventSwipeClick from '../shared/SlickWithPreventSwipeClick';\n\n\nconst slickSettings = {\n    'grid-nl': {\n        dots: false,\n        arrows: false,\n        infinite: true,\n        speed: 400,\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        responsive: [\n            {\n                breakpoint: 991,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                },\n            },\n            {\n                breakpoint: 767,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                },\n            },\n        ],\n    },\n    'list-sm': {\n        dots: false,\n        arrows: false,\n        infinite: true,\n        speed: 400,\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        responsive: [\n            {\n                breakpoint: 991,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1,\n                },\n            },\n        ],\n    },\n};\n\nexport default class BlockPosts extends Component {\n    handleNextClick = () => {\n        if (this.slickRef) {\n            this.slickRef.slickNext();\n        }\n    };\n\n    handlePrevClick = () => {\n        if (this.slickRef) {\n            this.slickRef.slickPrev();\n        }\n    };\n\n    setSlickRef = (ref) => {\n        this.slickRef = ref;\n    };\n\n    render() {\n        const { title, layout, posts } = this.props;\n\n        const postsList = posts.map((post) => <PostCard key={post.id} post={post} />);\n\n        return (\n            <div className={`block block-posts block-posts--layout--${layout}`} data-layout={layout}>\n                <div className=\"container\">\n                    <BlockHeader\n                        arrows\n                        title={title}\n                        onNext={this.handleNextClick}\n                        onPrev={this.handlePrevClick}\n                    />\n\n                    <div className=\"block-posts__slider\">\n                        <SlickWithPreventSwipeClick\n                            ref={this.setSlickRef}\n                            {...slickSettings[layout]}\n                        >\n                            {postsList}\n                        </SlickWithPreventSwipeClick>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nBlockPosts.propTypes = {\n    title: PropTypes.string.isRequired,\n    layout: PropTypes.oneOf(['list-sm', 'grid-nl']),\n    posts: PropTypes.array,\n};\n\nBlockPosts.defaultProps = {\n    layout: 'list-sm',\n    posts: [],\n};\n"]},"metadata":{},"sourceType":"module"}