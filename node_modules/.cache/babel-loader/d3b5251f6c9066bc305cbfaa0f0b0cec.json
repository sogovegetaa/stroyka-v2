{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\blog\\\\BlogCommentsList.jsx\";\n// react\nimport React from 'react'; // third-party\n\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction BlogCommentsList(props) {\n  const level = props.level,\n        comments = props.comments;\n  const commentsList = comments.map(comment => {\n    let children;\n\n    if (comment.children && comment.children.length) {\n      children = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(BlogCommentsList, {\n        comments: comment.children,\n        level: level + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      key: comment.id,\n      className: \"comments-list__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment__avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: comment.avatar,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"comment__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment__author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, comment.author)), React.createElement(\"div\", {\n      className: \"comment__reply\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-xs btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Reply\"))), React.createElement(\"div\", {\n      className: \"comment__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, comment.text), React.createElement(\"div\", {\n      className: \"comment__date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, comment.date))), children);\n  });\n  return React.createElement(\"ol\", {\n    className: \"comments-list comments-list--level--\".concat(level),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, commentsList);\n}\n\nBlogCommentsList.propTypes = {\n  comments: PropTypes.array,\n  level: PropTypes.number\n};\nBlogCommentsList.defaultProps = {\n  comments: [],\n  level: 0\n};\nexport default BlogCommentsList;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\blog\\BlogCommentsList.jsx"],"names":["React","PropTypes","Link","BlogCommentsList","props","level","comments","commentsList","map","comment","children","length","id","avatar","author","text","date","propTypes","array","number","defaultProps"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,QACrBC,KADqB,GACDD,KADC,CACrBC,KADqB;AAAA,QACdC,QADc,GACDF,KADC,CACdE,QADc;AAG7B,QAAMC,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAcC,OAAD,IAAa;AAC3C,QAAIC,QAAJ;;AAEA,QAAID,OAAO,CAACC,QAAR,IAAoBD,OAAO,CAACC,QAAR,CAAiBC,MAAzC,EAAiD;AAC7CD,MAAAA,QAAQ,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAED,OAAO,CAACC,QAApC;AAA8C,QAAA,KAAK,EAAEL,KAAK,GAAG,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;AAED,WACI;AAAI,MAAA,GAAG,EAAEI,OAAO,CAACG,EAAjB;AAAqB,MAAA,SAAS,EAAC,qBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa;AAAK,MAAA,GAAG,EAAEH,OAAO,CAACI,MAAlB;AAA0B,MAAA,GAAG,EAAC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb,CADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcJ,OAAO,CAACK,MAAtB,CADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAJJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCL,OAAO,CAACM,IAAxC,CATJ,EAUI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCN,OAAO,CAACO,IAAxC,CAVJ,CAJJ,CADJ,EAkBKN,QAlBL,CADJ;AAsBH,GAjCoB,CAArB;AAmCA,SACI;AAAI,IAAA,SAAS,gDAAyCL,KAAzC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,YADL,CADJ;AAKH;;AAEDJ,gBAAgB,CAACc,SAAjB,GAA6B;AACzBX,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,KADK;AAEzBb,EAAAA,KAAK,EAAEJ,SAAS,CAACkB;AAFQ,CAA7B;AAKAhB,gBAAgB,CAACiB,YAAjB,GAAgC;AAC5Bd,EAAAA,QAAQ,EAAE,EADkB;AAE5BD,EAAAA,KAAK,EAAE;AAFqB,CAAhC;AAKA,eAAeF,gBAAf","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nfunction BlogCommentsList(props) {\n    const { level, comments } = props;\n\n    const commentsList = comments.map((comment) => {\n        let children;\n\n        if (comment.children && comment.children.length) {\n            children = (\n                <div>\n                    <BlogCommentsList comments={comment.children} level={level + 1} />\n                </div>\n            );\n        }\n\n        return (\n            <li key={comment.id} className=\"comments-list__item\">\n                <div className=\"comment\">\n                    <div className=\"comment__avatar\">\n                        <Link to=\"/\"><img src={comment.avatar} alt=\"\" /></Link>\n                    </div>\n                    <div className=\"comment__content\">\n                        <div className=\"comment__header\">\n                            <div className=\"comment__author\">\n                                <Link to=\"/\">{comment.author}</Link>\n                            </div>\n                            <div className=\"comment__reply\">\n                                <button type=\"button\" className=\"btn btn-xs btn-light\">Reply</button>\n                            </div>\n                        </div>\n                        <div className=\"comment__text\">{comment.text}</div>\n                        <div className=\"comment__date\">{comment.date}</div>\n                    </div>\n                </div>\n                {children}\n            </li>\n        );\n    });\n\n    return (\n        <ol className={`comments-list comments-list--level--${level}`}>\n            {commentsList}\n        </ol>\n    );\n}\n\nBlogCommentsList.propTypes = {\n    comments: PropTypes.array,\n    level: PropTypes.number,\n};\n\nBlogCommentsList.defaultProps = {\n    comments: [],\n    level: 0,\n};\n\nexport default BlogCommentsList;\n"]},"metadata":{},"sourceType":"module"}