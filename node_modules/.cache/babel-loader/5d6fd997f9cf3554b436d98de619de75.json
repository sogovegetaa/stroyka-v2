{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\widgets\\\\WidgetFilters.jsx\";\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'; // application\n\nimport Collapse from '../shared/Collapse';\nimport FilterCategories from '../filters/FilterCategories';\nimport FilterCheckbox from '../filters/FilterCheckbox';\nimport FilterColor from '../filters/FilterColor';\nimport FilterPrice from '../filters/FilterPrice';\nimport FilterRadio from '../filters/FilterRadio';\nimport { ArrowRoundedDown12x7Svg } from '../../svg';\n\nfunction WidgetFilters(props) {\n  const title = props.title,\n        filters = props.filters,\n        offcanvas = props.offcanvas;\n  const filtersList = filters.map(filter => {\n    let filterView;\n\n    if (filter.type === 'categories') {\n      filterView = React.createElement(FilterCategories, {\n        categories: filter.options.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      });\n    } else if (filter.type === 'checkbox') {\n      filterView = React.createElement(FilterCheckbox, {\n        items: filter.options.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    } else if (['checkbox', 'radio'].includes(filter.type)) {\n      filterView = React.createElement(FilterRadio, {\n        items: filter.options.items,\n        name: filter.options.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    } else if (filter.type === 'color') {\n      filterView = React.createElement(FilterColor, {\n        items: filter.options.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    } else if (filter.type === 'price') {\n      filterView = React.createElement(FilterPrice, {\n        from: filter.options.from,\n        to: filter.options.to,\n        min: filter.options.min,\n        max: filter.options.max,\n        step: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      key: filter.id,\n      className: \"widget-filters__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Collapse, {\n      toggleClass: \"filter--opened\",\n      render: ({\n        toggle,\n        setItemRef,\n        setContentRef\n      }) => React.createElement(\"div\", {\n        className: \"filter filter--opened\",\n        ref: setItemRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"filter__title\",\n        onClick: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, filter.name, React.createElement(ArrowRoundedDown12x7Svg, {\n        className: \"filter__arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"filter__body\",\n        ref: setContentRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"filter__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, filterView))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  });\n  const classes = classNames('widget-filters widget', {\n    'widget-filters--offcanvas--always': offcanvas === 'always',\n    'widget-filters--offcanvas--mobile': offcanvas === 'mobile'\n  });\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"widget-filters__title widget__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"widget-filters__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, filtersList), React.createElement(\"div\", {\n    className: \"widget-filters__actions d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary btn-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Filter\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm ml-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Reset\")));\n}\n\nWidgetFilters.propTypes = {\n  /**\n   * widget title\n   */\n  title: PropTypes.node,\n\n  /**\n   * array of filters\n   */\n  filters: PropTypes.array,\n\n  /**\n   * indicates when sidebar bar should be off canvas\n   */\n  offcanvas: PropTypes.oneOf(['always', 'mobile'])\n};\nWidgetFilters.defaultProps = {\n  filters: [],\n  offcanvas: 'mobile'\n};\nexport default WidgetFilters;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\widgets\\WidgetFilters.jsx"],"names":["React","classNames","PropTypes","Collapse","FilterCategories","FilterCheckbox","FilterColor","FilterPrice","FilterRadio","ArrowRoundedDown12x7Svg","WidgetFilters","props","title","filters","offcanvas","filtersList","map","filter","filterView","type","options","items","includes","name","from","to","min","max","id","toggle","setItemRef","setContentRef","classes","propTypes","node","array","oneOf","defaultProps"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// application\nimport Collapse from '../shared/Collapse';\nimport FilterCategories from '../filters/FilterCategories';\nimport FilterCheckbox from '../filters/FilterCheckbox';\nimport FilterColor from '../filters/FilterColor';\nimport FilterPrice from '../filters/FilterPrice';\nimport FilterRadio from '../filters/FilterRadio';\nimport { ArrowRoundedDown12x7Svg } from '../../svg';\n\n\nfunction WidgetFilters(props) {\n    const { title, filters, offcanvas } = props;\n\n    const filtersList = filters.map((filter) => {\n        let filterView;\n\n        if (filter.type === 'categories') {\n            filterView = <FilterCategories categories={filter.options.items} />;\n        } else if (filter.type === 'checkbox') {\n            filterView = <FilterCheckbox items={filter.options.items} />;\n        } else if (['checkbox', 'radio'].includes(filter.type)) {\n            filterView = (\n                <FilterRadio\n                    items={filter.options.items}\n                    name={filter.options.name}\n                />\n            );\n        } else if (filter.type === 'color') {\n            filterView = <FilterColor items={filter.options.items} />;\n        } else if (filter.type === 'price') {\n            filterView = (\n                <FilterPrice\n                    from={filter.options.from}\n                    to={filter.options.to}\n                    min={filter.options.min}\n                    max={filter.options.max}\n                    step={1}\n                />\n            );\n        }\n\n        return (\n            <div key={filter.id} className=\"widget-filters__item\">\n                <Collapse\n                    toggleClass=\"filter--opened\"\n                    render={({ toggle, setItemRef, setContentRef }) => (\n                        <div className=\"filter filter--opened\" ref={setItemRef}>\n                            <button type=\"button\" className=\"filter__title\" onClick={toggle}>\n                                {filter.name}\n                                <ArrowRoundedDown12x7Svg className=\"filter__arrow\" />\n                            </button>\n                            <div className=\"filter__body\" ref={setContentRef}>\n                                <div className=\"filter__container\">\n                                    {filterView}\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                />\n            </div>\n        );\n    });\n\n    const classes = classNames('widget-filters widget', {\n        'widget-filters--offcanvas--always': offcanvas === 'always',\n        'widget-filters--offcanvas--mobile': offcanvas === 'mobile',\n    });\n\n    return (\n        <div className={classes}>\n            <h4 className=\"widget-filters__title widget__title\">{title}</h4>\n\n            <div className=\"widget-filters__list\">\n                {filtersList}\n            </div>\n\n            <div className=\"widget-filters__actions d-flex\">\n                <button type=\"button\" className=\"btn btn-primary btn-sm\">Filter</button>\n                <button type=\"button\" className=\"btn btn-secondary btn-sm ml-2\">Reset</button>\n            </div>\n        </div>\n    );\n}\n\nWidgetFilters.propTypes = {\n    /**\n     * widget title\n     */\n    title: PropTypes.node,\n    /**\n     * array of filters\n     */\n    filters: PropTypes.array,\n    /**\n     * indicates when sidebar bar should be off canvas\n     */\n    offcanvas: PropTypes.oneOf(['always', 'mobile']),\n};\n\nWidgetFilters.defaultProps = {\n    filters: [],\n    offcanvas: 'mobile',\n};\n\nexport default WidgetFilters;\n"]},"metadata":{},"sourceType":"module"}