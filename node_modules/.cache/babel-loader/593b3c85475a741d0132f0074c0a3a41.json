{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\shop\\\\CategorySidebar.jsx\";\n// react\nimport React, { useEffect, useRef } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; // application\n\nimport { Cross20Svg } from '../../svg';\nimport { sidebarClose } from '../../store/sidebar'; // widgets\n\nimport WidgetFilters from '../widgets/WidgetFilters';\nimport WidgetProducts from '../widgets/WidgetProducts'; // data stubs\n\nimport filters from '../../data/shopFilters';\nimport products from '../../data/shopProducts';\n\nfunction CategorySidebar(props) {\n  const sidebarClose = props.sidebarClose,\n        sidebarState = props.sidebarState,\n        offcanvas = props.offcanvas;\n  const classes = classNames('block block-sidebar', {\n    'block-sidebar--open': sidebarState.open,\n    'block-sidebar--offcanvas--always': offcanvas === 'always',\n    'block-sidebar--offcanvas--mobile': offcanvas === 'mobile'\n  });\n  const backdropRef = useRef(null);\n  const bodyRef = useRef(null);\n  useEffect(() => {\n    const media = matchMedia('(max-width: 991px)');\n    let changedByMedia = false;\n\n    const onChange = () => {\n      if (offcanvas === 'mobile') {\n        if (sidebarState.open && !media.matches) {\n          sidebarClose();\n        } // this is necessary to avoid the transition hiding the sidebar\n\n\n        if (!sidebarState.open && media.matches && changedByMedia) {\n          /** @var {HTMLElement} */\n          const backdrop = backdropRef.current;\n          /** @var {HTMLElement} */\n\n          const body = bodyRef.current;\n          backdrop.style.transition = 'none';\n          body.style.transition = 'none';\n          backdrop.getBoundingClientRect(); // force reflow\n\n          backdrop.style.transition = '';\n          body.style.transition = '';\n        }\n      }\n    };\n\n    if (media.addEventListener) {\n      media.addEventListener('change', onChange);\n    } else {\n      media.addListener(onChange);\n    }\n\n    onChange();\n    changedByMedia = true;\n    return () => {\n      if (media.removeEventListener) {\n        media.removeEventListener('change', onChange);\n      } else {\n        media.removeListener(onChange);\n      }\n    };\n  }, [offcanvas, sidebarState.open, sidebarClose]);\n  useEffect(() => {\n    if (sidebarState.open) {\n      const width = document.body.clientWidth;\n      document.body.style.overflow = 'hidden';\n      document.body.style.paddingRight = \"\".concat(document.body.clientWidth - width, \"px\");\n    } else {\n      document.body.style.overflow = '';\n      document.body.style.paddingRight = '';\n    }\n  }, [sidebarState.open]);\n  return React.createElement(\"div\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-sidebar__backdrop\",\n    ref: backdropRef,\n    onClick: () => sidebarClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"block-sidebar__body\",\n    ref: bodyRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-sidebar__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"block-sidebar__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Filters\"), React.createElement(\"button\", {\n    className: \"block-sidebar__close\",\n    type: \"button\",\n    onClick: () => sidebarClose(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Cross20Svg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"block-sidebar__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(WidgetFilters, {\n    title: \"Filters\",\n    filters: filters,\n    offcanvas: offcanvas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), offcanvas !== 'always' && React.createElement(\"div\", {\n    className: \"block-sidebar__item d-none d-lg-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(WidgetProducts, {\n    title: \"Latest Products\",\n    products: products.slice(0, 5),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))));\n}\n\nCategorySidebar.propTypes = {\n  /**\n   * indicates when sidebar bar should be off canvas\n   */\n  offcanvas: PropTypes.oneOf(['always', 'mobile'])\n};\nCategorySidebar.defaultProps = {\n  offcanvas: 'mobile'\n};\n\nconst mapStateToProps = state => ({\n  sidebarState: state.sidebar\n});\n\nconst mapDispatchToProps = {\n  sidebarClose\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CategorySidebar);","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\shop\\CategorySidebar.jsx"],"names":["React","useEffect","useRef","classNames","PropTypes","connect","Cross20Svg","sidebarClose","WidgetFilters","WidgetProducts","filters","products","CategorySidebar","props","sidebarState","offcanvas","classes","open","backdropRef","bodyRef","media","matchMedia","changedByMedia","onChange","matches","backdrop","current","body","style","transition","getBoundingClientRect","addEventListener","addListener","removeEventListener","removeListener","width","document","clientWidth","overflow","paddingRight","slice","propTypes","oneOf","defaultProps","mapStateToProps","state","sidebar","mapDispatchToProps"],"mappings":"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","sourcesContent":["// react\nimport React, { useEffect, useRef } from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n// application\nimport { Cross20Svg } from '../../svg';\nimport { sidebarClose } from '../../store/sidebar';\n\n// widgets\nimport WidgetFilters from '../widgets/WidgetFilters';\nimport WidgetProducts from '../widgets/WidgetProducts';\n\n// data stubs\nimport filters from '../../data/shopFilters';\nimport products from '../../data/shopProducts';\n\n\nfunction CategorySidebar(props) {\n    const {\n        sidebarClose,\n        sidebarState,\n        offcanvas,\n    } = props;\n\n    const classes = classNames('block block-sidebar', {\n        'block-sidebar--open': sidebarState.open,\n        'block-sidebar--offcanvas--always': offcanvas === 'always',\n        'block-sidebar--offcanvas--mobile': offcanvas === 'mobile',\n    });\n\n    const backdropRef = useRef(null);\n    const bodyRef = useRef(null);\n\n    useEffect(() => {\n        const media = matchMedia('(max-width: 991px)');\n        let changedByMedia = false;\n\n        const onChange = () => {\n            if (offcanvas === 'mobile') {\n                if (sidebarState.open && !media.matches) {\n                    sidebarClose();\n                }\n                // this is necessary to avoid the transition hiding the sidebar\n                if (!sidebarState.open && media.matches && changedByMedia) {\n                    /** @var {HTMLElement} */\n                    const backdrop = backdropRef.current;\n                    /** @var {HTMLElement} */\n                    const body = bodyRef.current;\n\n                    backdrop.style.transition = 'none';\n                    body.style.transition = 'none';\n\n                    backdrop.getBoundingClientRect(); // force reflow\n\n                    backdrop.style.transition = '';\n                    body.style.transition = '';\n                }\n            }\n        };\n\n        if (media.addEventListener) {\n            media.addEventListener('change', onChange);\n        } else {\n            media.addListener(onChange);\n        }\n\n        onChange();\n\n        changedByMedia = true;\n\n        return () => {\n            if (media.removeEventListener) {\n                media.removeEventListener('change', onChange);\n            } else {\n                media.removeListener(onChange);\n            }\n        };\n    }, [offcanvas, sidebarState.open, sidebarClose]);\n\n    useEffect(() => {\n        if (sidebarState.open) {\n            const width = document.body.clientWidth;\n\n            document.body.style.overflow = 'hidden';\n            document.body.style.paddingRight = `${document.body.clientWidth - width}px`;\n        } else {\n            document.body.style.overflow = '';\n            document.body.style.paddingRight = '';\n        }\n    }, [sidebarState.open]);\n\n    return (\n        <div className={classes}>\n            {/* eslint-disable-next-line max-len */}\n            {/* eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions */}\n            <div className=\"block-sidebar__backdrop\" ref={backdropRef} onClick={() => sidebarClose()} />\n            <div className=\"block-sidebar__body\" ref={bodyRef}>\n                <div className=\"block-sidebar__header\">\n                    <div className=\"block-sidebar__title\">Filters</div>\n                    <button className=\"block-sidebar__close\" type=\"button\" onClick={() => sidebarClose()}>\n                        <Cross20Svg />\n                    </button>\n                </div>\n                <div className=\"block-sidebar__item\">\n                    <WidgetFilters title=\"Filters\" filters={filters} offcanvas={offcanvas} />\n                </div>\n                {offcanvas !== 'always' && (\n                    <div className=\"block-sidebar__item d-none d-lg-block\">\n                        <WidgetProducts title=\"Latest Products\" products={products.slice(0, 5)} />\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nCategorySidebar.propTypes = {\n    /**\n     * indicates when sidebar bar should be off canvas\n     */\n    offcanvas: PropTypes.oneOf(['always', 'mobile']),\n};\n\nCategorySidebar.defaultProps = {\n    offcanvas: 'mobile',\n};\n\nconst mapStateToProps = (state) => ({\n    sidebarState: state.sidebar,\n});\n\nconst mapDispatchToProps = {\n    sidebarClose,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategorySidebar);\n"]},"metadata":{},"sourceType":"module"}