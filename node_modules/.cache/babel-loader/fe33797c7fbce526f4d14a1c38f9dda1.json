{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\mobile\\\\MobileLinks.jsx\";\n// react\nimport React from 'react'; // third-party\n\nimport PropTypes from 'prop-types'; // application\n\nimport AppLink from '../shared/AppLink';\nimport Collapse from '../shared/Collapse';\nimport { ArrowRoundedDown12x7Svg } from '../../svg';\n\nfunction MobileLinks(props) {\n  const links = props.links,\n        level = props.level,\n        onItemClick = props.onItemClick;\n\n  const handleItemClick = item => {\n    if (onItemClick) {\n      onItemClick(item);\n    }\n  };\n\n  const linksList = links.map((link, index) => {\n    let item;\n\n    if (link.type === 'link' || link.type === 'button') {\n      item = React.createElement(Collapse, {\n        toggleClass: \"mobile-links__item--open\",\n        render: ({\n          toggle,\n          setItemRef,\n          setContentRef\n        }) => {\n          let arrow;\n          let subLinks;\n          let linkOrButton;\n\n          if (link.children && link.children.length > 0) {\n            arrow = React.createElement(\"button\", {\n              className: \"mobile-links__item-toggle\",\n              type: \"button\",\n              onClick: toggle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, React.createElement(ArrowRoundedDown12x7Svg, {\n              className: \"mobile-links__item-arrow\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }));\n            subLinks = React.createElement(\"div\", {\n              className: \"mobile-links__item-sub-links\",\n              ref: setContentRef,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, React.createElement(MobileLinks, {\n              links: link.children,\n              level: level + 1,\n              onItemClick: onItemClick,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }));\n          }\n\n          if (link.type === 'link') {\n            linkOrButton = React.createElement(AppLink, {\n              to: link.url,\n              className: \"mobile-links__item-link\",\n              onClick: () => handleItemClick(link),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54\n              },\n              __self: this\n            }, link.label);\n          } else {\n            linkOrButton = React.createElement(\"button\", {\n              type: \"button\",\n              className: \"mobile-links__item-link\",\n              onClick: () => handleItemClick(link),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            }, link.label);\n          }\n\n          return React.createElement(\"div\", {\n            className: \"mobile-links__item\",\n            ref: setItemRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"mobile-links__item-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, linkOrButton, arrow), subLinks);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    } else if (link.type === 'divider') {\n      item = React.createElement(\"div\", {\n        className: \"mobile-links__divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, item);\n  });\n  return React.createElement(\"ul\", {\n    className: \"mobile-links mobile-links--level--\".concat(level),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, linksList);\n}\n\nMobileLinks.propTypes = {\n  links: PropTypes.array,\n  level: PropTypes.number,\n  onItemClick: PropTypes.func\n};\nMobileLinks.defaultProps = {\n  links: [],\n  level: 0\n};\nexport default MobileLinks;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\mobile\\MobileLinks.jsx"],"names":["React","PropTypes","AppLink","Collapse","ArrowRoundedDown12x7Svg","MobileLinks","props","links","level","onItemClick","handleItemClick","item","linksList","map","link","index","type","toggle","setItemRef","setContentRef","arrow","subLinks","linkOrButton","children","length","url","label","propTypes","array","number","func","defaultProps"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport PropTypes from 'prop-types';\n\n// application\nimport AppLink from '../shared/AppLink';\nimport Collapse from '../shared/Collapse';\nimport { ArrowRoundedDown12x7Svg } from '../../svg';\n\n\nfunction MobileLinks(props) {\n    const { links, level, onItemClick } = props;\n\n    const handleItemClick = (item) => {\n        if (onItemClick) {\n            onItemClick(item);\n        }\n    };\n\n    const linksList = links.map((link, index) => {\n        let item;\n\n        if (link.type === 'link' || link.type === 'button') {\n            item = (\n                <Collapse\n                    toggleClass=\"mobile-links__item--open\"\n                    render={({ toggle, setItemRef, setContentRef }) => {\n                        let arrow;\n                        let subLinks;\n                        let linkOrButton;\n\n                        if (link.children && link.children.length > 0) {\n                            arrow = (\n                                <button className=\"mobile-links__item-toggle\" type=\"button\" onClick={toggle}>\n                                    <ArrowRoundedDown12x7Svg className=\"mobile-links__item-arrow\" />\n                                </button>\n                            );\n\n                            subLinks = (\n                                <div className=\"mobile-links__item-sub-links\" ref={setContentRef}>\n                                    <MobileLinks\n                                        links={link.children}\n                                        level={level + 1}\n                                        onItemClick={onItemClick}\n                                    />\n                                </div>\n                            );\n                        }\n\n                        if (link.type === 'link') {\n                            linkOrButton = (\n                                <AppLink\n                                    to={link.url}\n                                    className=\"mobile-links__item-link\"\n                                    onClick={() => handleItemClick(link)}\n                                >\n                                    {link.label}\n                                </AppLink>\n                            );\n                        } else {\n                            linkOrButton = (\n                                <button\n                                    type=\"button\"\n                                    className=\"mobile-links__item-link\"\n                                    onClick={() => handleItemClick(link)}\n                                >\n                                    {link.label}\n                                </button>\n                            );\n                        }\n\n                        return (\n                            <div className=\"mobile-links__item\" ref={setItemRef}>\n                                <div className=\"mobile-links__item-title\">\n                                    {linkOrButton}\n                                    {arrow}\n                                </div>\n                                {subLinks}\n                            </div>\n                        );\n                    }}\n                />\n            );\n        } else if (link.type === 'divider') {\n            item = <div className=\"mobile-links__divider\" />;\n        }\n\n        return <li key={index}>{item}</li>;\n    });\n\n    return (\n        <ul className={`mobile-links mobile-links--level--${level}`}>\n            {linksList}\n        </ul>\n    );\n}\n\nMobileLinks.propTypes = {\n    links: PropTypes.array,\n    level: PropTypes.number,\n    onItemClick: PropTypes.func,\n};\n\nMobileLinks.defaultProps = {\n    links: [],\n    level: 0,\n};\n\nexport default MobileLinks;\n"]},"metadata":{},"sourceType":"module"}