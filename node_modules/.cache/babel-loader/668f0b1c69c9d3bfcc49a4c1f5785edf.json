{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\header\\\\Menu.jsx\";\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'; // application\n\nimport AppLink from '../shared/AppLink';\nimport { ArrowRoundedRight6x9Svg } from '../../svg';\n\nfunction Menu(props) {\n  const layout = props.layout,\n        withIcons = props.withIcons,\n        items = props.items,\n        _onClick = props.onClick;\n\n  const renderLink = (item, content) => {\n    let link;\n\n    if (item.url) {\n      link = React.createElement(AppLink, Object.assign({}, item.props, {\n        to: item.url,\n        onClick: () => _onClick(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), content);\n    } else {\n      link = React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => _onClick(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, content);\n    }\n\n    return link;\n  };\n\n  const itemsList = items.map((item, index) => {\n    let arrow;\n    let submenu;\n    let icon;\n\n    if (item.submenu) {\n      arrow = React.createElement(ArrowRoundedRight6x9Svg, {\n        className: \"menu__arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      });\n    }\n\n    if (item.submenu) {\n      submenu = React.createElement(\"div\", {\n        className: \"menu__submenu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        items: item.submenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n\n    if (withIcons && item.icon) {\n      icon = React.createElement(\"div\", {\n        className: \"menu__icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.icon,\n        srcSet: item.icon_srcset,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n\n    if (!item.title) {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, renderLink(item, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, icon, item, arrow)), submenu);\n    }\n\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, renderLink(item, React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, icon, item.title, arrow)), submenu);\n  });\n  const classes = classNames(\"menu menu--layout--\".concat(layout), {\n    'menu--with-icons': withIcons\n  });\n  return React.createElement(\"ul\", {\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, itemsList);\n}\n\nMenu.propTypes = {\n  /** one of ['classic', 'topbar'] (default: 'classic') */\n  layout: PropTypes.oneOf(['classic', 'topbar']),\n\n  /** default: false */\n  withIcons: PropTypes.bool,\n\n  /** array of menu items */\n  items: PropTypes.array,\n\n  /** callback function that is called when the item is clicked */\n  onClick: PropTypes.func\n};\nMenu.defaultProps = {\n  layout: 'classic',\n  withIcons: false,\n  items: [],\n  onClick: () => {}\n};\nexport default Menu;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\header\\Menu.jsx"],"names":["React","classNames","PropTypes","AppLink","ArrowRoundedRight6x9Svg","Menu","props","layout","withIcons","items","onClick","renderLink","item","content","link","url","itemsList","map","index","arrow","submenu","icon","icon_srcset","title","classes","propTypes","oneOf","bool","array","func","defaultProps"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// application\nimport AppLink from '../shared/AppLink';\nimport { ArrowRoundedRight6x9Svg } from '../../svg';\n\n\nfunction Menu(props) {\n    const {\n        layout,\n        withIcons,\n        items,\n        onClick,\n    } = props;\n\n    const renderLink = (item, content) => {\n        let link;\n        \n        if (item.url) {\n            link = (\n                <AppLink\n                    {...item.props}\n                    to={item.url}\n                    onClick={() => onClick(item)}\n                >\n                    {content}\n                </AppLink>\n            );\n        } else {\n            link = <button type=\"button\" onClick={() => onClick(item)}>{content}</button>;\n        }\n\n        return link;\n    };\n     \n    const itemsList = items.map((item, index) => {\n        \n        let arrow;\n        let submenu;\n        let icon;\n\n        if (item.submenu) {\n            arrow = <ArrowRoundedRight6x9Svg className=\"menu__arrow\" />;\n        }\n\n        if (item.submenu) {\n            submenu = (\n                <div className=\"menu__submenu\">\n                    <Menu items={item.submenu} />\n                </div>\n            );\n        }\n\n        if (withIcons && item.icon) {\n            icon = (\n                <div className=\"menu__icon\">\n                    <img src={item.icon} srcSet={item.icon_srcset} alt=\"\" />\n                </div>\n            );\n        }\n\n        if(!item.title){\n                 return (\n            <li key={index}>\n                {renderLink(item, (\n                    <React.Fragment>\n                        {icon}\n                        {item}\n                        {arrow}\n                    </React.Fragment>\n                ))}\n                {submenu}\n            </li>\n        );\n        }\n        return (\n            <li key={index}>\n                {renderLink(item, (\n                    <React.Fragment>\n                        {icon}\n                        {item.title}\n                        {arrow}\n                    </React.Fragment>\n                ))}\n                {submenu}\n            </li>\n        );\n    });\n\n    const classes = classNames(`menu menu--layout--${layout}`, {\n        'menu--with-icons': withIcons,\n    });\n\n    return (\n        <ul className={classes}>\n            {itemsList}\n        </ul>\n    );\n}\n\nMenu.propTypes = {\n    /** one of ['classic', 'topbar'] (default: 'classic') */\n    layout: PropTypes.oneOf(['classic', 'topbar']),\n    /** default: false */\n    withIcons: PropTypes.bool,\n    /** array of menu items */\n    items: PropTypes.array,\n    /** callback function that is called when the item is clicked */\n    onClick: PropTypes.func,\n};\n\nMenu.defaultProps = {\n    layout: 'classic',\n    withIcons: false,\n    items: [],\n    onClick: () => {},\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}