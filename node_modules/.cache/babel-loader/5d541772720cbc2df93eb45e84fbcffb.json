{"ast":null,"code":"// third-party\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'; // reducer\n\nimport rootReducer from './rootReducer';\n\nfunction load() {\n  let state;\n\n  try {\n    state = localStorage.getItem('state');\n\n    if (typeof state === 'string') {\n      state = JSON.parse(state);\n    }\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n\n  return state || undefined;\n}\n\nconst store = createStore(rootReducer, load(), compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nfunction save() {\n  try {\n    localStorage.setItem('state', JSON.stringify(store.getState()));\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n  }\n}\n\nstore.subscribe(() => save());\nexport default store;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\store\\store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","load","state","localStorage","getItem","JSON","parse","error","console","undefined","store","window","__REDUX_DEVTOOLS_EXTENSION__","save","setItem","stringify","getState","subscribe"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,SAASC,IAAT,GAAgB;AACZ,MAAIC,KAAJ;;AAEA,MAAI;AAEAA,IAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;;AAEA,QAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,MAAAA,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAR;AACH;AACJ,GAPD,CAOE,OAAOK,KAAP,EAAc;AACZ;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;;AAED,SAAOL,KAAK,IAAIO,SAAhB;AACH;;AAED,MAAMC,KAAK,GAAGd,WAAW,CAACI,WAAD,EAAcC,IAAI,EAAlB,EAAsBH,OAAO,CAClDD,eAAe,CAACE,KAAD,CADmC,EAEjDY,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFU,CAA7B,CAAzB;;AAKA,SAASC,IAAT,GAAgB;AACZ,MAAI;AACAV,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACU,SAAL,CAAeL,KAAK,CAACM,QAAN,EAAf,CAA9B;AACH,GAFD,CAEE,OAAOT,KAAP,EAAc;AACZ;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;;AAEDG,KAAK,CAACO,SAAN,CAAgB,MAAMJ,IAAI,EAA1B;AAEA,eAAeH,KAAf","sourcesContent":["// third-party\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\n// reducer\nimport rootReducer from './rootReducer';\n\n\nfunction load() {\n    let state;\n\n    try {\n        \n        state = localStorage.getItem('state');\n\n        if (typeof state === 'string') {\n            state = JSON.parse(state);\n        }\n    } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n    }\n\n    return state || undefined;\n}\n\nconst store = createStore(rootReducer, load(), compose(\n    applyMiddleware(thunk),\n     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nfunction save() {\n    try {\n        localStorage.setItem('state', JSON.stringify(store.getState()));\n    } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n    }\n}\n\nstore.subscribe(() => save());\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}