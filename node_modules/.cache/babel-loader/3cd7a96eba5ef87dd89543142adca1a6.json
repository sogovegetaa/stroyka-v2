{"ast":null,"code":"// react\nimport { Component } from 'react'; // third-party\n\nimport PropTypes from 'prop-types';\n\nclass Collapse extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleTransitionEnd = event => {\n      if (this.content && event.propertyName === 'height') {\n        this.content.style.height = '';\n      }\n    };\n\n    this.handleToggle = () => {\n      const toggleClass = this.props.toggleClass;\n\n      if (!this.item || !this.content || !toggleClass) {\n        return;\n      }\n\n      if (this.item.classList.contains(toggleClass)) {\n        this.collapse();\n      } else {\n        this.expand();\n      }\n    };\n\n    this.setItemRef = ref => {\n      this.item = ref;\n    };\n\n    this.setContentRef = ref => {\n      this.content = ref;\n    };\n  }\n\n  componentDidMount() {\n    if (!this.content) {\n      return;\n    }\n\n    const open = this.props.open;\n    this.content.addEventListener('transitionend', this.handleTransitionEnd);\n\n    if (open === true) {\n      this.expand(true);\n    }\n\n    if (open === false) {\n      this.collapse(true);\n    }\n  }\n\n  componentDidUpdate() {\n    const open = this.props.open;\n\n    if (typeof open === 'boolean') {\n      if (open) {\n        this.expand();\n      } else {\n        this.collapse();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.content) {\n      return;\n    }\n\n    this.content.removeEventListener('transitionend', this.handleTransitionEnd);\n  }\n\n  expand(immediate = false) {\n    const toggleClass = this.props.toggleClass;\n\n    if (!this.item || !this.content || !toggleClass) {\n      return;\n    }\n\n    if (immediate) {\n      this.item.classList.add(toggleClass);\n      this.content.style.height = '';\n    } else {\n      const startHeight = this.content.getBoundingClientRect().height;\n      this.item.classList.add(toggleClass);\n      const endHeight = this.content.getBoundingClientRect().height;\n      this.content.style.height = \"\".concat(startHeight, \"px\");\n      this.content.getBoundingClientRect(); // force reflow\n\n      this.content.style.height = \"\".concat(endHeight, \"px\");\n    }\n  }\n\n  collapse(immediate = false) {\n    const toggleClass = this.props.toggleClass;\n\n    if (immediate) {\n      this.item.classList.remove(toggleClass);\n      this.content.style.height = '';\n    } else {\n      const startHeight = this.content.getBoundingClientRect().height;\n      this.content.style.height = \"\".concat(startHeight, \"px\");\n      this.item.classList.remove(toggleClass);\n      this.content.getBoundingClientRect(); // force reflow\n\n      this.content.style.height = '';\n    }\n  }\n\n  render() {\n    const render = this.props.render;\n\n    if (render) {\n      return render({\n        toggle: this.handleToggle,\n        setItemRef: this.setItemRef,\n        setContentRef: this.setContentRef\n      });\n    }\n\n    return null;\n  }\n\n}\n\nCollapse.propTypes = {\n  /** class that will be applied to this.item when opened */\n  toggleClass: PropTypes.string,\n\n  /** render function with arguments: toggle, setItemRef, setContentRef */\n  render: PropTypes.func,\n\n  /** if specified, the component will behave as a stateless component */\n  open: PropTypes.bool\n};\nexport default Collapse;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\shared\\Collapse.jsx"],"names":["Component","PropTypes","Collapse","handleTransitionEnd","event","content","propertyName","style","height","handleToggle","toggleClass","props","item","classList","contains","collapse","expand","setItemRef","ref","setContentRef","componentDidMount","open","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","immediate","add","startHeight","getBoundingClientRect","endHeight","remove","render","toggle","propTypes","string","func","bool"],"mappings":"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","sourcesContent":["// react\nimport { Component } from 'react';\n\n// third-party\nimport PropTypes from 'prop-types';\n\n\nclass Collapse extends Component {\n    componentDidMount() {\n        if (!this.content) {\n            return;\n        }\n\n        const { open } = this.props;\n\n        this.content.addEventListener('transitionend', this.handleTransitionEnd);\n\n        if (open === true) {\n            this.expand(true);\n        }\n        if (open === false) {\n            this.collapse(true);\n        }\n    }\n\n    componentDidUpdate() {\n        const { open } = this.props;\n\n        if (typeof open === 'boolean') {\n            if (open) {\n                this.expand();\n            } else {\n                this.collapse();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        if (!this.content) {\n            return;\n        }\n\n        this.content.removeEventListener('transitionend', this.handleTransitionEnd);\n    }\n\n    handleTransitionEnd = (event) => {\n        if (this.content && event.propertyName === 'height') {\n            this.content.style.height = '';\n        }\n    };\n\n    handleToggle = () => {\n        const { toggleClass } = this.props;\n\n        if (!this.item || !this.content || !toggleClass) {\n            return;\n        }\n\n        if (this.item.classList.contains(toggleClass)) {\n            this.collapse();\n        } else {\n            this.expand();\n        }\n    };\n\n    setItemRef = (ref) => {\n        this.item = ref;\n    };\n\n    setContentRef = (ref) => {\n        this.content = ref;\n    };\n\n    expand(immediate = false) {\n        const { toggleClass } = this.props;\n\n        if (!this.item || !this.content || !toggleClass) {\n            return;\n        }\n\n        if (immediate) {\n            this.item.classList.add(toggleClass);\n            this.content.style.height = '';\n        } else {\n            const startHeight = this.content.getBoundingClientRect().height;\n\n            this.item.classList.add(toggleClass);\n\n            const endHeight = this.content.getBoundingClientRect().height;\n\n            this.content.style.height = `${startHeight}px`;\n            this.content.getBoundingClientRect(); // force reflow\n            this.content.style.height = `${endHeight}px`;\n        }\n    }\n\n    collapse(immediate = false) {\n        const { toggleClass } = this.props;\n\n        if (immediate) {\n            this.item.classList.remove(toggleClass);\n            this.content.style.height = '';\n        } else {\n            const startHeight = this.content.getBoundingClientRect().height;\n\n            this.content.style.height = `${startHeight}px`;\n            this.item.classList.remove(toggleClass);\n\n            this.content.getBoundingClientRect(); // force reflow\n            this.content.style.height = '';\n        }\n    }\n\n    render() {\n        const { render } = this.props;\n\n        if (render) {\n            return render({\n                toggle: this.handleToggle,\n                setItemRef: this.setItemRef,\n                setContentRef: this.setContentRef,\n            });\n        }\n\n        return null;\n    }\n}\n\nCollapse.propTypes = {\n    /** class that will be applied to this.item when opened */\n    toggleClass: PropTypes.string,\n    /** render function with arguments: toggle, setItemRef, setContentRef */\n    render: PropTypes.func,\n    /** if specified, the component will behave as a stateless component */\n    open: PropTypes.bool,\n};\n\nexport default Collapse;\n"]},"metadata":{},"sourceType":"module"}