{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\header\\\\IndicatorCart.jsx\";\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // application\n\nimport AsyncAction from '../shared/AsyncAction';\nimport Currency from '../shared/Currency';\nimport Indicator from './Indicator';\nimport { Cart20Svg, Cross10Svg } from '../../svg';\nimport { cartRemoveItem } from '../../store/cart';\n\nfunction IndicatorCart(props) {\n  const cart = props.cart,\n        cartRemoveItem = props.cartRemoveItem;\n  let dropdown;\n  let totals;\n\n  if (cart.extraLines.length > 0) {\n    const extraLines = cart.extraLines.map((extraLine, index) => React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, extraLine.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: extraLine.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }))));\n    totals = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\\u0410\\u0440\\u0430\\u043B\\u044B\\u049B \\u049B\\u043E\\u0440\\u044B\\u0442\\u044B\\u043D\\u0434\\u044B\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: cart.subtotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }))), extraLines);\n  }\n\n  const items = cart.items.map(item => {\n    let options;\n    let image;\n\n    if (item.options) {\n      options = React.createElement(\"ul\", {\n        className: \"dropcart__product-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.options.map((option, index) => React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\".concat(option.optionTitle, \": \").concat(option.valueTitle))));\n    }\n\n    if (item.product.images.length) {\n      image = React.createElement(\"div\", {\n        className: \"dropcart__product-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/shop/product/\".concat(item.product.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.product.images[0],\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n\n    const removeButton = React.createElement(AsyncAction, {\n      action: () => cartRemoveItem(item.id),\n      render: ({\n        run,\n        loading\n      }) => {\n        const classes = classNames('dropcart__product-remove btn btn-light btn-sm btn-svg-icon', {\n          'btn-loading': loading\n        });\n        return React.createElement(\"button\", {\n          type: \"button\",\n          onClick: run,\n          className: classes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Cross10Svg, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      key: item.id,\n      className: \"dropcart__product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, image, React.createElement(\"div\", {\n      className: \"dropcart__product-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropcart__product-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/shop/product/\".concat(item.product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, item.product.name)), options, React.createElement(\"div\", {\n      className: \"dropcart__product-meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dropcart__product-quantity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, item.quantity), ' x ', React.createElement(\"span\", {\n      className: \"dropcart__product-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: item.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))), removeButton);\n  });\n\n  if (cart.quantity) {\n    dropdown = React.createElement(\"div\", {\n      className: \"dropcart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropcart__products-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, items), React.createElement(\"div\", {\n      className: \"dropcart__totals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, totals, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: cart.total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"dropcart__buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btn btn-secondary\",\n      to: \"/shop/cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"\\u0421\\u0435\\u0431\\u0435\\u0442\\u0442\\u0456 \\u049B\\u0430\\u0440\\u0430\\u0443\"), React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/shop/checkout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Checkout\")));\n  } else {\n    dropdown = React.createElement(\"div\", {\n      className: \"dropcart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dropcart__empty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Your shopping cart is empty!\"));\n  }\n\n  return React.createElement(Indicator, {\n    url: \"/shop/cart\",\n    dropdown: dropdown,\n    value: cart.quantity,\n    icon: React.createElement(Cart20Svg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart\n});\n\nconst mapDispatchToProps = {\n  cartRemoveItem\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(IndicatorCart);","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\header\\IndicatorCart.jsx"],"names":["React","classNames","connect","Link","AsyncAction","Currency","Indicator","Cart20Svg","Cross10Svg","cartRemoveItem","IndicatorCart","props","cart","dropdown","totals","extraLines","length","map","extraLine","index","title","price","subtotal","items","item","options","image","option","optionTitle","valueTitle","product","images","id","removeButton","run","loading","classes","name","quantity","total","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// application\nimport AsyncAction from '../shared/AsyncAction';\nimport Currency from '../shared/Currency';\nimport Indicator from './Indicator';\nimport { Cart20Svg, Cross10Svg } from '../../svg';\nimport { cartRemoveItem } from '../../store/cart';\n\n\nfunction IndicatorCart(props) {\n    const { cart, cartRemoveItem } = props;\n    let dropdown;\n    let totals;\n\n    if (cart.extraLines.length > 0) {\n        const extraLines = cart.extraLines.map((extraLine, index) => (\n            <tr key={index}>\n                <th>{extraLine.title}</th>\n                <td><Currency value={extraLine.price} /></td>\n            </tr>\n        ));\n\n        totals = (\n            <React.Fragment>\n                <tr>\n                    <th>Аралық қорытынды</th>\n                    <td><Currency value={cart.subtotal} /></td>\n                </tr>\n                {extraLines}\n            </React.Fragment>\n        );\n    }\n\n    const items = cart.items.map((item) => {\n        let options;\n        let image;\n\n        if (item.options) {\n            options = (\n                <ul className=\"dropcart__product-options\">\n                    {item.options.map((option, index) => (\n                        <li key={index}>{`${option.optionTitle}: ${option.valueTitle}`}</li>\n                    ))}\n                </ul>\n            );\n        }\n\n        if (item.product.images.length) {\n            image = (\n                <div className=\"dropcart__product-image\">\n                    <Link to={`/shop/product/${item.product.id}`}>\n                        <img src={item.product.images[0]} alt=\"\" />\n                    </Link>\n                </div>\n            );\n        }\n\n        const removeButton = (\n            <AsyncAction\n                action={() => cartRemoveItem(item.id)}\n                render={({ run, loading }) => {\n                    const classes = classNames('dropcart__product-remove btn btn-light btn-sm btn-svg-icon', {\n                        'btn-loading': loading,\n                    });\n\n                    return (\n                        <button type=\"button\" onClick={run} className={classes}>\n                            <Cross10Svg />\n                        </button>\n                    );\n                }}\n            />\n        );\n\n        return (\n            <div key={item.id} className=\"dropcart__product\">\n                {image}\n                <div className=\"dropcart__product-info\">\n                    <div className=\"dropcart__product-name\">\n                        <Link to={`/shop/product/${item.product.id}`}>{item.product.name}</Link>\n                    </div>\n                    {options}\n                    <div className=\"dropcart__product-meta\">\n                        <span className=\"dropcart__product-quantity\">{item.quantity}</span>\n                        {' x '}\n                        <span className=\"dropcart__product-price\"><Currency value={item.price} /></span>\n                    </div>\n                </div>\n                {removeButton}\n            </div>\n        );\n    });\n\n    if (cart.quantity) {\n        dropdown = (\n            <div className=\"dropcart\">\n                <div className=\"dropcart__products-list\">\n                    {items}\n                </div>\n\n                <div className=\"dropcart__totals\">\n                    <table>\n                        <tbody>\n                            {totals}\n                            <tr>\n                                <th>Total</th>\n                                <td><Currency value={cart.total} /></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div className=\"dropcart__buttons\">\n                    <Link className=\"btn btn-secondary\" to=\"/shop/cart\">Себетті қарау</Link>\n                    <Link className=\"btn btn-primary\" to=\"/shop/checkout\">Checkout</Link>\n                </div>\n            </div>\n        );\n    } else {\n        dropdown = (\n            <div className=\"dropcart\">\n                <div className=\"dropcart__empty\">\n                    Your shopping cart is empty!\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <Indicator url=\"/shop/cart\" dropdown={dropdown} value={cart.quantity} icon={<Cart20Svg />} />\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    cart: state.cart,\n});\n\nconst mapDispatchToProps = {\n    cartRemoveItem,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IndicatorCart);\n"]},"metadata":{},"sourceType":"module"}