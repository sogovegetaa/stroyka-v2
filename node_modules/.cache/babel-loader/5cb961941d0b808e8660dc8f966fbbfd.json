{"ast":null,"code":"import _defineProperty from \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { QUICKVIEW_CLOSE, QUICKVIEW_OPEN } from './quickviewActionTypes';\nconst initialState = {\n  open: false,\n  product: null\n};\nexport default function quickviewReducer(state = initialState, action) {\n  let newState = state;\n\n  if (action.type === QUICKVIEW_OPEN) {\n    newState = _objectSpread({}, state, {\n      open: true,\n      product: JSON.parse(JSON.stringify(action.product))\n    });\n  } else if (action.type === QUICKVIEW_CLOSE) {\n    newState = _objectSpread({}, state, {\n      open: false\n    });\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\store\\quickview\\quickviewReducer.js"],"names":["QUICKVIEW_CLOSE","QUICKVIEW_OPEN","initialState","open","product","quickviewReducer","state","action","newState","type","JSON","parse","stringify"],"mappings":";;;;;;AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,wBAAhD;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,KADW;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,SAASC,gBAAT,CAA0BC,KAAK,GAAGJ,YAAlC,EAAgDK,MAAhD,EAAwD;AACnE,MAAIC,QAAQ,GAAGF,KAAf;;AAEA,MAAIC,MAAM,CAACE,IAAP,KAAgBR,cAApB,EAAoC;AAChCO,IAAAA,QAAQ,qBACDF,KADC;AAEJH,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,OAAO,EAAEM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,MAAM,CAACH,OAAtB,CAAX;AAHL,MAAR;AAKH,GAND,MAMO,IAAIG,MAAM,CAACE,IAAP,KAAgBT,eAApB,EAAqC;AACxCQ,IAAAA,QAAQ,qBACDF,KADC;AAEJH,MAAAA,IAAI,EAAE;AAFF,MAAR;AAIH;;AAED,SAAOK,QAAP;AACH","sourcesContent":["import { QUICKVIEW_CLOSE, QUICKVIEW_OPEN } from './quickviewActionTypes';\n\n\nconst initialState = {\n    open: false,\n    product: null,\n};\n\nexport default function quickviewReducer(state = initialState, action) {\n    let newState = state;\n\n    if (action.type === QUICKVIEW_OPEN) {\n        newState = {\n            ...state,\n            open: true,\n            product: JSON.parse(JSON.stringify(action.product)),\n        };\n    } else if (action.type === QUICKVIEW_CLOSE) {\n        newState = {\n            ...state,\n            open: false,\n        };\n    }\n\n    return newState;\n}\n"]},"metadata":{},"sourceType":"module"}