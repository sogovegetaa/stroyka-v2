{"ast":null,"code":"export var TYPE;\n\n(function (TYPE) {\n  /**\r\n   * Raw text\r\n   */\n  TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n  /**\r\n   * Variable w/o any format, e.g `var` in `this is a {var}`\r\n   */\n\n  TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n  /**\r\n   * Variable w/ number format\r\n   */\n\n  TYPE[TYPE[\"number\"] = 2] = \"number\";\n  /**\r\n   * Variable w/ date format\r\n   */\n\n  TYPE[TYPE[\"date\"] = 3] = \"date\";\n  /**\r\n   * Variable w/ time format\r\n   */\n\n  TYPE[TYPE[\"time\"] = 4] = \"time\";\n  /**\r\n   * Variable w/ select format\r\n   */\n\n  TYPE[TYPE[\"select\"] = 5] = \"select\";\n  /**\r\n   * Variable w/ plural format\r\n   */\n\n  TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n})(TYPE || (TYPE = {}));\n/**\r\n * Type Guards\r\n */\n\n\nexport function isLiteralElement(el) {\n  return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n  return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n  return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n  return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n  return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n  return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n  return el.type === TYPE.plural;\n}\nexport function isNumberSkeleton(el) {\n  return el.type === 0\n  /* number */\n  ;\n}\nexport function isDateTimeSkeleton(el) {\n  return el.type === 1\n  /* dateTime */\n  ;\n}\nexport function createLiteralElement(value) {\n  return {\n    type: TYPE.literal,\n    value: value\n  };\n}\nexport function createNumberElement(value, style) {\n  return {\n    type: TYPE.number,\n    value: value,\n    style: style\n  };\n}","map":null,"metadata":{},"sourceType":"module"}