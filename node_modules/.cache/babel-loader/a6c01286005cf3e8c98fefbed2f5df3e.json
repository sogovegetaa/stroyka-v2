{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\blog\\\\BlogPageCategory.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet'; // application\n\nimport PageHeader from '../shared/PageHeader';\nimport Pagination from '../shared/Pagination';\nimport PostCard from '../shared/PostCard';\nimport BlogSidebar from './BlogSidebar'; // data stubs\n\nimport posts from '../../data/blogPosts';\nimport theme from '../../data/theme';\nexport default class BlogPageCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageChange = page => {\n      this.setState(() => ({\n        page\n      }));\n    };\n\n    this.state = {\n      page: 1\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          layout = _this$props.layout,\n          sidebarPosition = _this$props.sidebarPosition;\n    const page = this.state.page;\n    const breadcrumb = [{\n      title: 'Басты бет',\n      url: ''\n    }, {\n      title: 'Блог',\n      url: ''\n    }, {\n      title: 'Соңғы жаңалықтар',\n      url: ''\n    }];\n    let sidebarStart;\n    let sidebarEnd;\n    const sidebar = React.createElement(BlogSidebar, {\n      position: sidebarPosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n\n    if (sidebarPosition === 'start') {\n      sidebarStart = React.createElement(\"div\", {\n        className: \"col-12 col-lg-4 order-1 order-lg-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, sidebar);\n    } else if (sidebarPosition === 'end') {\n      sidebarEnd = React.createElement(\"div\", {\n        className: \"col-12 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, sidebar);\n    }\n\n    const postsList = posts.map(post => {\n      const postLayout = {\n        classic: 'grid-lg',\n        grid: 'grid-nl',\n        list: 'list-nl'\n      }[layout];\n      return React.createElement(\"div\", {\n        key: post.id,\n        className: \"posts-list__item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(PostCard, {\n        post: post,\n        layout: postLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Blog Category Page \\u2014 \".concat(theme.name))), React.createElement(PageHeader, {\n      header: \"\\u0421\\u043E\\u04A3\\u0493\\u044B \\u0436\\u0430\\u04A3\\u0430\\u043B\\u044B\\u049B\\u0442\\u0430\\u0440\",\n      breadcrumb: breadcrumb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, sidebarStart, React.createElement(\"div\", {\n      className: \"col-12 col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posts-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posts-view__list posts-list posts-list--layout--\".concat(layout),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"posts-list__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, postsList)), React.createElement(\"div\", {\n      className: \"posts-view__pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      current: page,\n      siblings: 2,\n      total: 10,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))))), sidebarEnd)));\n  }\n\n}\nBlogPageCategory.propTypes = {\n  /**\n   * blog layout\n   * one of ['classic', 'grid', 'list'] (default: 'classic')\n   */\n  layout: PropTypes.oneOf(['classic', 'grid', 'list']),\n\n  /**\n   * sidebar position (default: 'start')\n   * one of ['start', 'end']\n   * for LTR scripts \"start\" is \"left\" and \"end\" is \"right\"\n   */\n  sidebarPosition: PropTypes.oneOf(['start', 'end'])\n};\nBlogPageCategory.defaultProps = {\n  layout: 'classic',\n  sidebarPosition: 'start'\n};","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\blog\\BlogPageCategory.jsx"],"names":["React","Component","PropTypes","Helmet","PageHeader","Pagination","PostCard","BlogSidebar","posts","theme","BlogPageCategory","constructor","props","handlePageChange","page","setState","state","render","layout","sidebarPosition","breadcrumb","title","url","sidebarStart","sidebarEnd","sidebar","postsList","map","post","postLayout","classic","grid","list","id","name","propTypes","oneOf","defaultProps"],"mappings":"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","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\n// application\nimport PageHeader from '../shared/PageHeader';\nimport Pagination from '../shared/Pagination';\nimport PostCard from '../shared/PostCard';\nimport BlogSidebar from './BlogSidebar';\n\n// data stubs\nimport posts from '../../data/blogPosts';\nimport theme from '../../data/theme';\n\n\nexport default class BlogPageCategory extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 1,\n        };\n    }\n\n    handlePageChange = (page) => {\n        this.setState(() => ({ page }));\n    };\n\n    render() {\n        const { layout, sidebarPosition } = this.props;\n        const { page } = this.state;\n\n        const breadcrumb = [\n            { title: 'Басты бет', url: '' },\n            { title: 'Блог', url: '' },\n            { title: 'Соңғы жаңалықтар', url: '' },\n        ];\n\n        let sidebarStart;\n        let sidebarEnd;\n\n        const sidebar = <BlogSidebar position={sidebarPosition} />;\n\n        if (sidebarPosition === 'start') {\n            sidebarStart = <div className=\"col-12 col-lg-4 order-1 order-lg-0\">{sidebar}</div>;\n        } else if (sidebarPosition === 'end') {\n            sidebarEnd = <div className=\"col-12 col-lg-4\">{sidebar}</div>;\n        }\n\n        const postsList = posts.map((post) => {\n            const postLayout = {\n                classic: 'grid-lg',\n                grid: 'grid-nl',\n                list: 'list-nl',\n            }[layout];\n\n            return (\n                <div key={post.id} className=\"posts-list__item\">\n                    <PostCard post={post} layout={postLayout} />\n                </div>\n            );\n        });\n\n        return (\n            <React.Fragment>\n                <Helmet>\n                    <title>{`Blog Category Page — ${theme.name}`}</title>\n                </Helmet>\n\n                <PageHeader header=\"Соңғы жаңалықтар\" breadcrumb={breadcrumb} />\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {sidebarStart}\n                        <div className=\"col-12 col-lg-8\">\n                            <div className=\"block\">\n                                <div className=\"posts-view\">\n                                    <div className={`posts-view__list posts-list posts-list--layout--${layout}`}>\n                                        <div className=\"posts-list__body\">\n                                            {postsList}\n                                        </div>\n                                    </div>\n                                    <div className=\"posts-view__pagination\">\n                                        <Pagination\n                                            current={page}\n                                            siblings={2}\n                                            total={10}\n                                            onPageChange={this.handlePageChange}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {sidebarEnd}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nBlogPageCategory.propTypes = {\n    /**\n     * blog layout\n     * one of ['classic', 'grid', 'list'] (default: 'classic')\n     */\n    layout: PropTypes.oneOf(['classic', 'grid', 'list']),\n    /**\n     * sidebar position (default: 'start')\n     * one of ['start', 'end']\n     * for LTR scripts \"start\" is \"left\" and \"end\" is \"right\"\n     */\n    sidebarPosition: PropTypes.oneOf(['start', 'end']),\n};\n\nBlogPageCategory.defaultProps = {\n    layout: 'classic',\n    sidebarPosition: 'start',\n};\n"]},"metadata":{},"sourceType":"module"}