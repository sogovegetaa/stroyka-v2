{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\shared\\\\ProductCard.jsx\";\n// react\nimport React from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'; // application\n\nimport AsyncAction from './AsyncAction';\nimport Currency from './Currency';\nimport Rating from './Rating';\nimport { cartAddItem } from '../../store/cart';\nimport { Compare16Svg, Quickview16Svg, Wishlist16Svg } from '../../svg';\nimport { compareAddItem } from '../../store/compare';\nimport { quickviewOpen } from '../../store/quickview';\nimport { wishlistAddItem } from '../../store/wishlist';\n\nfunction ProductCard(props) {\n  const product = props.product,\n        layout = props.layout,\n        quickviewOpen = props.quickviewOpen,\n        cartAddItem = props.cartAddItem,\n        wishlistAddItem = props.wishlistAddItem,\n        compareAddItem = props.compareAddItem;\n  const containerClasses = classNames('product-card', {\n    'product-card--layout--grid product-card--size--sm': layout === 'grid-sm',\n    'product-card--layout--grid product-card--size--nl': layout === 'grid-nl',\n    'product-card--layout--grid product-card--size--lg': layout === 'grid-lg',\n    'product-card--layout--list': layout === 'list',\n    'product-card--layout--horizontal': layout === 'horizontal'\n  });\n  let badges = [];\n  let image;\n  let price;\n  let features;\n\n  if (product.badges.includes('sale')) {\n    badges.push(React.createElement(\"div\", {\n      key: \"sale\",\n      className: \"product-card__badge product-card__badge--sale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\u0421\\u0430\\u0442\\u0443\"));\n  }\n\n  if (product.badges.includes('hot')) {\n    badges.push(React.createElement(\"div\", {\n      key: \"hot\",\n      className: \"product-card__badge product-card__badge--hot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u042B\\u0441\\u0442\\u044B\\u049B\"));\n  }\n\n  if (product.badges.includes('new')) {\n    badges.push(React.createElement(\"div\", {\n      key: \"new\",\n      className: \"product-card__badge product-card__badge--new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u0416\\u0430\\u04A3\\u0430\"));\n  }\n\n  badges = badges.length ? React.createElement(\"div\", {\n    className: \"product-card__badges-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, badges) : null;\n\n  if (product.images && product.images.length > 0) {\n    image = React.createElement(\"div\", {\n      className: \"product-card__image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/shop/product/\".concat(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.images[0],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n  if (product.compareAtPrice) {\n    price = React.createElement(\"div\", {\n      className: \"product-card__prices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"product-card__new-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: product.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), ' ', React.createElement(\"span\", {\n      className: \"product-card__old-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: product.compareAtPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  } else {\n    price = React.createElement(\"div\", {\n      className: \"product-card__prices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Currency, {\n      value: product.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n  if (product.features && product.features.length) {\n    features = React.createElement(\"ul\", {\n      className: \"product-card__features-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, product.features.map((feature, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\".concat(feature.name, \": \").concat(feature.value))));\n  }\n\n  return React.createElement(\"div\", {\n    className: containerClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(AsyncAction, {\n    action: () => quickviewOpen(product.id),\n    render: ({\n      run,\n      loading\n    }) => React.createElement(\"button\", {\n      type: \"button\",\n      onClick: run,\n      className: classNames('product-card__quickview', {\n        'product-card__quickview--preload': loading\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Quickview16Svg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), badges, image, React.createElement(\"div\", {\n    className: \"product-card__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-card__name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/shop/product/\".concat(product.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, product.name)), React.createElement(\"div\", {\n    className: \"product-card__rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Rating, {\n    value: product.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \" product-card__rating-legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"\".concat(product.reviews, \" \\u041F\\u0456\\u043A\\u0456\\u0440\\u043B\\u0435\\u0440\"))), features), React.createElement(\"div\", {\n    className: \"product-card__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-card__availability\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"\\u049A\\u043E\\u043B \\u0436\\u0435\\u0442\\u0456\\u043C\\u0434\\u0456\\u043B\\u0456\\u043A:\", React.createElement(\"span\", {\n    className: \"text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"In Stock\")), price, React.createElement(\"div\", {\n    className: \"product-card__buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(AsyncAction, {\n    action: () => cartAddItem(product),\n    render: ({\n      run,\n      loading\n    }) => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: run,\n      className: classNames('btn btn-primary product-card__addtocart', {\n        'btn-loading': loading\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u0421\\u0435\\u0431\\u0435\\u0442\\u043A\\u0435 \\u049B\\u043E\\u0441\\u0443\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: run,\n      className: classNames('btn btn-secondary product-card__addtocart product-card__addtocart--list', {\n        'btn-loading': loading\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\u0421\\u0435\\u0431\\u0435\\u0442\\u043A\\u0435 \\u049B\\u043E\\u0441\\u0443\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(AsyncAction, {\n    action: () => wishlistAddItem(product),\n    render: ({\n      run,\n      loading\n    }) => React.createElement(\"button\", {\n      type: \"button\",\n      onClick: run,\n      className: classNames('btn btn-light btn-svg-icon btn-svg-icon--fake-svg product-card__wishlist', {\n        'btn-loading': loading\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Wishlist16Svg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(AsyncAction, {\n    action: () => compareAddItem(product),\n    render: ({\n      run,\n      loading\n    }) => React.createElement(\"button\", {\n      type: \"button\",\n      onClick: run,\n      className: classNames('btn btn-light btn-svg-icon btn-svg-icon--fake-svg product-card__compare', {\n        'btn-loading': loading\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Compare16Svg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }))));\n}\n\nProductCard.propTypes = {\n  /**\n   * product object\n   */\n  product: PropTypes.object.isRequired,\n\n  /**\n   * product card layout\n   * one of ['grid-sm', 'grid-nl', 'grid-lg', 'list', 'horizontal']\n   */\n  layout: PropTypes.oneOf(['grid-sm', 'grid-nl', 'grid-lg', 'list', 'horizontal'])\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  cartAddItem,\n  wishlistAddItem,\n  compareAddItem,\n  quickviewOpen\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\shared\\ProductCard.jsx"],"names":["React","classNames","PropTypes","connect","Link","AsyncAction","Currency","Rating","cartAddItem","Compare16Svg","Quickview16Svg","Wishlist16Svg","compareAddItem","quickviewOpen","wishlistAddItem","ProductCard","props","product","layout","containerClasses","badges","image","price","features","includes","push","length","images","id","compareAtPrice","map","feature","index","name","value","run","loading","rating","reviews","propTypes","object","isRequired","oneOf","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["// react\nimport React from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// application\nimport AsyncAction from './AsyncAction';\nimport Currency from './Currency';\nimport Rating from './Rating';\nimport { cartAddItem } from '../../store/cart';\nimport { Compare16Svg, Quickview16Svg, Wishlist16Svg } from '../../svg';\nimport { compareAddItem } from '../../store/compare';\nimport { quickviewOpen } from '../../store/quickview';\nimport { wishlistAddItem } from '../../store/wishlist';\n\n\nfunction ProductCard(props) {\n    const {\n        product,\n        layout,\n        quickviewOpen,\n        cartAddItem,\n        wishlistAddItem,\n        compareAddItem,\n    } = props;\n    const containerClasses = classNames('product-card', {\n        'product-card--layout--grid product-card--size--sm': layout === 'grid-sm',\n        'product-card--layout--grid product-card--size--nl': layout === 'grid-nl',\n        'product-card--layout--grid product-card--size--lg': layout === 'grid-lg',\n        'product-card--layout--list': layout === 'list',\n        'product-card--layout--horizontal': layout === 'horizontal',\n    });\n\n    let badges = [];\n    let image;\n    let price;\n    let features;\n\n    if (product.badges.includes('sale')) {\n        badges.push(<div key=\"sale\" className=\"product-card__badge product-card__badge--sale\">Сату</div>);\n    }\n    if (product.badges.includes('hot')) {\n        badges.push(<div key=\"hot\" className=\"product-card__badge product-card__badge--hot\">Ыстық</div>);\n    }\n    if (product.badges.includes('new')) {\n        badges.push(<div key=\"new\" className=\"product-card__badge product-card__badge--new\">Жаңа</div>);\n    }\n\n    badges = badges.length ? <div className=\"product-card__badges-list\">{badges}</div> : null;\n\n    if (product.images && product.images.length > 0) {\n        image = (\n            <div className=\"product-card__image\">\n                <Link to={`/shop/product/${product.id}`}><img src={product.images[0]} alt=\"\" /></Link>\n            </div>\n        );\n    }\n\n    if (product.compareAtPrice) {\n        price = (\n            <div className=\"product-card__prices\">\n                <span className=\"product-card__new-price\"><Currency value={product.price} /></span>\n                {' '}\n                <span className=\"product-card__old-price\"><Currency value={product.compareAtPrice} /></span>\n            </div>\n        );\n    } else {\n        price = (\n            <div className=\"product-card__prices\">\n                <Currency value={product.price} />\n            </div>\n        );\n    }\n\n    if (product.features && product.features.length) {\n        features = (\n            <ul className=\"product-card__features-list\">\n                {product.features.map((feature, index) => (\n                    <li key={index}>{`${feature.name}: ${feature.value}`}</li>\n                ))}\n            </ul>\n        );\n    }\n\n    return (\n        <div className={containerClasses}>\n            <AsyncAction\n                action={() => quickviewOpen(product.id)}\n                render={({ run, loading }) => (\n                    <button\n                        type=\"button\"\n                        onClick={run}\n                        className={classNames('product-card__quickview', {\n                            'product-card__quickview--preload': loading,\n                        })}\n                    >\n                        <Quickview16Svg />\n                    </button>\n                )}\n            />\n            {badges}\n            {image}\n            <div className=\"product-card__info\">\n                <div className=\"product-card__name\">\n                    <Link to={`/shop/product/${product.id}`}>{product.name}</Link>\n                </div>\n                <div className=\"product-card__rating\">\n                    <Rating value={product.rating} />\n                    <div className=\" product-card__rating-legend\">{`${product.reviews} Пікірлер`}</div>\n                </div>\n                {features}\n            </div>\n            <div className=\"product-card__actions\">\n                <div className=\"product-card__availability\">\n                    Қол жетімділік:\n                    <span className=\"text-success\">In Stock</span>\n                </div>\n                {price}\n                <div className=\"product-card__buttons\">\n                    <AsyncAction\n                        action={() => cartAddItem(product)}\n                        render={({ run, loading }) => (\n                            <React.Fragment>\n                                <button\n                                    type=\"button\"\n                                    onClick={run}\n                                    className={classNames('btn btn-primary product-card__addtocart', {\n                                        'btn-loading': loading,\n                                    })}\n                                >\n                                    Себетке қосу\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    onClick={run}\n                                    className={classNames('btn btn-secondary product-card__addtocart product-card__addtocart--list', {\n                                        'btn-loading': loading,\n                                    })}\n                                >\n                                    Себетке қосу\n                                </button>\n                            </React.Fragment>\n                        )}\n                    />\n                    <AsyncAction\n                        action={() => wishlistAddItem(product)}\n                        render={({ run, loading }) => (\n                            <button\n                                type=\"button\"\n                                onClick={run}\n                                className={classNames('btn btn-light btn-svg-icon btn-svg-icon--fake-svg product-card__wishlist', {\n                                    'btn-loading': loading,\n                                })}\n                            >\n                                <Wishlist16Svg />\n                            </button>\n                        )}\n                    />\n                    <AsyncAction\n                        action={() => compareAddItem(product)}\n                        render={({ run, loading }) => (\n                            <button\n                                type=\"button\"\n                                onClick={run}\n                                className={classNames('btn btn-light btn-svg-icon btn-svg-icon--fake-svg product-card__compare', {\n                                    'btn-loading': loading,\n                                })}\n                            >\n                                <Compare16Svg />\n                            </button>\n                        )}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nProductCard.propTypes = {\n    /**\n     * product object\n     */\n    product: PropTypes.object.isRequired,\n    /**\n     * product card layout\n     * one of ['grid-sm', 'grid-nl', 'grid-lg', 'list', 'horizontal']\n     */\n    layout: PropTypes.oneOf(['grid-sm', 'grid-nl', 'grid-lg', 'list', 'horizontal']),\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n    cartAddItem,\n    wishlistAddItem,\n    compareAddItem,\n    quickviewOpen,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ProductCard);\n"]},"metadata":{},"sourceType":"module"}