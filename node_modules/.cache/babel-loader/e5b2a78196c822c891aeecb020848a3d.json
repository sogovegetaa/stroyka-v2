{"ast":null,"code":"var _jsxFileName = \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\src\\\\components\\\\header\\\\Dropdown.jsx\";\n// react\nimport React, { Component } from 'react'; // third-party\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'; // application\n\nimport Menu from './Menu';\nimport { ArrowRoundedDown7x5Svg } from '../../svg';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setWrapperRef = node => {\n      this.wrapperRef = node;\n    };\n\n    this.handleOutsideClick = event => {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n        this.setState(() => ({\n          open: false\n        }));\n      }\n    };\n\n    this.handleButtonClick = () => {\n      this.setState(state => ({\n        open: !state.open\n      }));\n    };\n\n    this.handleItemClick = item => {\n      const onClick = this.props.onClick;\n      this.setState(() => ({\n        open: false\n      }));\n\n      if (onClick) {\n        onClick(item);\n      }\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleOutsideClick);\n  }\n\n  render() {\n    const open = this.state.open;\n    const _this$props = this.props,\n          title = _this$props.title,\n          withIcons = _this$props.withIcons,\n          items = _this$props.items;\n    const classes = classNames('topbar-dropdown', {\n      'topbar-dropdown--opened': open\n    });\n    return React.createElement(\"div\", {\n      className: classes,\n      ref: this.setWrapperRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"topbar-dropdown__btn\",\n      type: \"button\",\n      onClick: this.handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, title, React.createElement(ArrowRoundedDown7x5Svg, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"topbar-dropdown__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      layout: \"topbar\",\n      withIcons: withIcons,\n      items: items,\n      onClick: this.handleItemClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nDropdown.propTypes = {\n  /** title */\n  title: PropTypes.node.isRequired,\n\n  /** array of menu items */\n  items: PropTypes.array.isRequired,\n\n  /** default: false */\n  withIcons: PropTypes.bool,\n\n  /** callback function that is called when the item is clicked */\n  onClick: PropTypes.func\n};\nDropdown.defaultProps = {\n  withIcons: false,\n  onClick: undefined\n};\nexport default Dropdown;","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\components\\header\\Dropdown.jsx"],"names":["React","Component","classNames","PropTypes","Menu","ArrowRoundedDown7x5Svg","Dropdown","constructor","props","setWrapperRef","node","wrapperRef","handleOutsideClick","event","contains","target","setState","open","handleButtonClick","state","handleItemClick","item","onClick","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","title","withIcons","items","classes","propTypes","isRequired","array","bool","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["// react\nimport React, { Component } from 'react';\n\n// third-party\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// application\nimport Menu from './Menu';\nimport { ArrowRoundedDown7x5Svg } from '../../svg';\n\n\nclass Dropdown extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleOutsideClick);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleOutsideClick);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapperRef = node;\n    };\n\n    handleOutsideClick = (event) => {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.setState(() => ({\n                open: false,\n            }));\n        }\n    };\n\n    handleButtonClick = () => {\n        this.setState((state) => ({\n            open: !state.open,\n        }));\n    };\n\n    handleItemClick = (item) => {\n        const { onClick } = this.props;\n\n        this.setState(() => ({\n            open: false,\n        }));\n\n        if (onClick) {\n            onClick(item);\n        }\n    };\n\n    render() {\n        const { open } = this.state;\n        const { title, withIcons, items } = this.props;\n\n        const classes = classNames('topbar-dropdown', {\n            'topbar-dropdown--opened': open,\n        });\n\n        return (\n            <div className={classes} ref={this.setWrapperRef}>\n                <button className=\"topbar-dropdown__btn\" type=\"button\" onClick={this.handleButtonClick}>\n                    {title}\n                    <ArrowRoundedDown7x5Svg />\n                </button>\n\n                <div className=\"topbar-dropdown__body\">\n                    <Menu\n                        layout=\"topbar\"\n                        withIcons={withIcons}\n                        items={items}\n                        onClick={this.handleItemClick}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    /** title */\n    title: PropTypes.node.isRequired,\n    /** array of menu items */\n    items: PropTypes.array.isRequired,\n    /** default: false */\n    withIcons: PropTypes.bool,\n    /** callback function that is called when the item is clicked */\n    onClick: PropTypes.func,\n};\n\nDropdown.defaultProps = {\n    withIcons: false,\n    onClick: undefined,\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}