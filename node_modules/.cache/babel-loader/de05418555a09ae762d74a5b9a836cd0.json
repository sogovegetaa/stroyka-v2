{"ast":null,"code":"import _defineProperty from \"C:\\\\Mustax\\\\qwe\\\\stroyka-tools-store-react-ecommerce-template-23909258-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_QUANTITIES } from './cartActionTypes';\n/**\n * @param {array} items\n * @param {object} product\n * @param {array} options\n * @return {number}\n */\n\nfunction findItemIndex(items, product, options) {\n  return items.findIndex(item => {\n    if (item.product.id !== product.id || item.options.length !== options.length) {\n      return false;\n    }\n\n    for (let i = 0; i < options.length; i += 1) {\n      const option = options[i];\n      const itemOption = item.options.find(itemOption => itemOption.optionId === option.optionId && itemOption.valueId === option.valueId);\n\n      if (!itemOption) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n}\n\nfunction calcSubtotal(items) {\n  return items.reduce((subtotal, item) => subtotal + item.total, 0);\n}\n\nfunction calcQuantity(items) {\n  return items.reduce((quantity, item) => quantity + item.quantity, 0);\n}\n\nfunction calcTotal(subtotal, extraLines) {\n  return subtotal + extraLines.reduce((total, extraLine) => total + extraLine.price, 0);\n}\n\nfunction addItem(state, product, options, quantity) {\n  const itemIndex = findItemIndex(state.items, product, options);\n  let newItems;\n  let lastItemId = state.lastItemId;\n\n  if (itemIndex === -1) {\n    lastItemId += 1;\n    newItems = [...state.items, {\n      id: lastItemId,\n      product: JSON.parse(JSON.stringify(product)),\n      options: JSON.parse(JSON.stringify(options)),\n      price: product.price,\n      total: product.price * quantity,\n      quantity\n    }];\n  } else {\n    const item = state.items[itemIndex];\n    newItems = [...state.items.slice(0, itemIndex), _objectSpread({}, item, {\n      quantity: item.quantity + quantity,\n      total: (item.quantity + quantity) * item.price\n    }), ...state.items.slice(itemIndex + 1)];\n  }\n\n  const subtotal = calcSubtotal(newItems);\n  const total = calcTotal(subtotal, state.extraLines);\n  return _objectSpread({}, state, {\n    lastItemId,\n    subtotal,\n    total,\n    items: newItems,\n    quantity: calcQuantity(newItems)\n  });\n}\n\nfunction removeItem(state, itemId) {\n  const items = state.items;\n  const newItems = items.filter(item => item.id !== itemId);\n  const subtotal = calcSubtotal(newItems);\n  const total = calcTotal(subtotal, state.extraLines);\n  return _objectSpread({}, state, {\n    items: newItems,\n    quantity: calcQuantity(newItems),\n    subtotal,\n    total\n  });\n}\n\nfunction updateQuantities(state, quantities) {\n  let needUpdate = false;\n  const newItems = state.items.map(item => {\n    const quantity = quantities.find(x => x.itemId === item.id && x.value !== item.quantity);\n\n    if (!quantity) {\n      return item;\n    }\n\n    needUpdate = true;\n    return _objectSpread({}, item, {\n      quantity: quantity.value,\n      total: quantity.value * item.price\n    });\n  });\n\n  if (needUpdate) {\n    const subtotal = calcSubtotal(newItems);\n    const total = calcTotal(subtotal, state.extraLines);\n    return _objectSpread({}, state, {\n      items: newItems,\n      quantity: calcQuantity(newItems),\n      subtotal,\n      total\n    });\n  }\n\n  return state;\n}\n/*\n* item example:\n* {\n*   id: 1,\n*   product: {...}\n*   options: [\n*     {optionId: 1, optionTitle: 'Color', valueId: 1, valueTitle: 'Red'}\n*   ],\n*   price: 250,\n*   quantity: 2,\n*   total: 500\n* }\n* extraLine example:\n* {\n*   type: 'shipping',\n*   title: 'Shipping',\n*   price: 25\n* }\n*/\n\n\nconst initialState = {\n  lastItemId: 0,\n  quantity: 0,\n  items: [],\n  subtotal: 0,\n  extraLines: [// shipping, taxes, fees, .etc\n  {\n    type: 'shipping',\n    title: 'Shipping',\n    price: 25\n  }, {\n    type: 'tax',\n    title: 'Tax',\n    price: 0\n  }],\n  total: 0\n};\nexport default function cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      return addItem(state, action.product, action.options, action.quantity);\n\n    case CART_REMOVE_ITEM:\n      return removeItem(state, action.itemId);\n\n    case CART_UPDATE_QUANTITIES:\n      return updateQuantities(state, action.quantities);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Mustax\\qwe\\stroyka-tools-store-react-ecommerce-template-23909258-master\\src\\store\\cart\\cartReducer.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_UPDATE_QUANTITIES","findItemIndex","items","product","options","findIndex","item","id","length","i","option","itemOption","find","optionId","valueId","calcSubtotal","reduce","subtotal","total","calcQuantity","quantity","calcTotal","extraLines","extraLine","price","addItem","state","itemIndex","newItems","lastItemId","JSON","parse","stringify","slice","removeItem","itemId","filter","updateQuantities","quantities","needUpdate","map","x","value","initialState","type","title","cartReducer","action"],"mappings":"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","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_UPDATE_QUANTITIES } from './cartActionTypes';\n\n\n/**\n * @param {array} items\n * @param {object} product\n * @param {array} options\n * @return {number}\n */\nfunction findItemIndex(items, product, options) {\n    return items.findIndex((item) => {\n        if (item.product.id !== product.id || item.options.length !== options.length) {\n            return false;\n        }\n\n        for (let i = 0; i < options.length; i += 1) {\n            const option = options[i];\n            const itemOption = item.options.find(itemOption => (\n                itemOption.optionId === option.optionId && itemOption.valueId === option.valueId\n            ));\n\n            if (!itemOption) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n}\n\nfunction calcSubtotal(items) {\n    return items.reduce((subtotal, item) => subtotal + item.total, 0);\n}\n\nfunction calcQuantity(items) {\n    return items.reduce((quantity, item) => quantity + item.quantity, 0);\n}\n\nfunction calcTotal(subtotal, extraLines) {\n    return subtotal + extraLines.reduce((total, extraLine) => total + extraLine.price, 0);\n}\n\nfunction addItem(state, product, options, quantity) {\n    const itemIndex = findItemIndex(state.items, product, options);\n\n    let newItems;\n    let { lastItemId } = state;\n\n    if (itemIndex === -1) {\n        lastItemId += 1;\n        newItems = [...state.items, {\n            id: lastItemId,\n            product: JSON.parse(JSON.stringify(product)),\n            options: JSON.parse(JSON.stringify(options)),\n            price: product.price,\n            total: product.price * quantity,\n            quantity,\n        }];\n    } else {\n        const item = state.items[itemIndex];\n\n        newItems = [\n            ...state.items.slice(0, itemIndex),\n            {\n                ...item,\n                quantity: item.quantity + quantity,\n                total: (item.quantity + quantity) * item.price,\n            },\n            ...state.items.slice(itemIndex + 1),\n        ];\n    }\n\n    const subtotal = calcSubtotal(newItems);\n    const total = calcTotal(subtotal, state.extraLines);\n\n    return {\n        ...state,\n        lastItemId,\n        subtotal,\n        total,\n        items: newItems,\n        quantity: calcQuantity(newItems),\n    };\n}\n\nfunction removeItem(state, itemId) {\n    const { items } = state;\n    const newItems = items.filter(item => item.id !== itemId);\n\n    const subtotal = calcSubtotal(newItems);\n    const total = calcTotal(subtotal, state.extraLines);\n\n    return {\n        ...state,\n        items: newItems,\n        quantity: calcQuantity(newItems),\n        subtotal,\n        total,\n    };\n}\n\nfunction updateQuantities(state, quantities) {\n    let needUpdate = false;\n\n    const newItems = state.items.map((item) => {\n        const quantity = quantities.find(x => x.itemId === item.id && x.value !== item.quantity);\n\n        if (!quantity) {\n            return item;\n        }\n\n        needUpdate = true;\n\n        return {\n            ...item,\n            quantity: quantity.value,\n            total: quantity.value * item.price,\n        };\n    });\n\n    if (needUpdate) {\n        const subtotal = calcSubtotal(newItems);\n        const total = calcTotal(subtotal, state.extraLines);\n\n        return {\n            ...state,\n            items: newItems,\n            quantity: calcQuantity(newItems),\n            subtotal,\n            total,\n        };\n    }\n\n    return state;\n}\n\n/*\n* item example:\n* {\n*   id: 1,\n*   product: {...}\n*   options: [\n*     {optionId: 1, optionTitle: 'Color', valueId: 1, valueTitle: 'Red'}\n*   ],\n*   price: 250,\n*   quantity: 2,\n*   total: 500\n* }\n* extraLine example:\n* {\n*   type: 'shipping',\n*   title: 'Shipping',\n*   price: 25\n* }\n*/\nconst initialState = {\n    lastItemId: 0,\n    quantity: 0,\n    items: [],\n    subtotal: 0,\n    extraLines: [ // shipping, taxes, fees, .etc\n        {\n            type: 'shipping',\n            title: 'Shipping',\n            price: 25,\n        },\n        {\n            type: 'tax',\n            title: 'Tax',\n            price: 0,\n        },\n    ],\n    total: 0,\n};\n\nexport default function cartReducer(state = initialState, action) {\n    switch (action.type) {\n    case CART_ADD_ITEM:\n        return addItem(state, action.product, action.options, action.quantity);\n\n    case CART_REMOVE_ITEM:\n        return removeItem(state, action.itemId);\n\n    case CART_UPDATE_QUANTITIES:\n        return updateQuantities(state, action.quantities);\n\n    default:\n        return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}