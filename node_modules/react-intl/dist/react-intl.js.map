{"version":3,"file":"react-intl.js","sources":["../lib/define-messages.js","../node_modules/intl-messageformat-parser/lib/types.js","../node_modules/intl-messageformat-parser/lib/parser.js","../node_modules/intl-messageformat-parser/lib/normalize.js","../node_modules/intl-messageformat-parser/lib/index.js","../node_modules/intl-format-cache/lib/index.js","../node_modules/intl-messageformat/lib/formatters.js","../node_modules/intl-messageformat/lib/core.js","../node_modules/intl-messageformat/lib/index.js","../node_modules/invariant/invariant.js","../lib/utils.js","../lib/components/injectIntl.js","../lib/components/createFormattedComponent.js","../lib/components/useIntl.js","../lib/format.js","../node_modules/intl-locales-supported/lib/index.js","../lib/components/provider.js","../lib/components/relative.js","../lib/components/plural.js","../lib/components/message.js","../lib/components/html-message.js","../lib/index.js"],"sourcesContent":["export default function defineMessages(messageDescriptors) {\n    // This simply returns what's passed-in because it's meant to be a hook for\n    // babel-plugin-react-intl.\n    return messageDescriptors;\n}\n","export var TYPE;\r\n(function (TYPE) {\r\n    /**\r\n     * Raw text\r\n     */\r\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\r\n    /**\r\n     * Variable w/o any format, e.g `var` in `this is a {var}`\r\n     */\r\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\r\n    /**\r\n     * Variable w/ number format\r\n     */\r\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\r\n    /**\r\n     * Variable w/ date format\r\n     */\r\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\r\n    /**\r\n     * Variable w/ time format\r\n     */\r\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\r\n    /**\r\n     * Variable w/ select format\r\n     */\r\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\r\n    /**\r\n     * Variable w/ plural format\r\n     */\r\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\r\n})(TYPE || (TYPE = {}));\r\n/**\r\n * Type Guards\r\n */\r\nexport function isLiteralElement(el) {\r\n    return el.type === TYPE.literal;\r\n}\r\nexport function isArgumentElement(el) {\r\n    return el.type === TYPE.argument;\r\n}\r\nexport function isNumberElement(el) {\r\n    return el.type === TYPE.number;\r\n}\r\nexport function isDateElement(el) {\r\n    return el.type === TYPE.date;\r\n}\r\nexport function isTimeElement(el) {\r\n    return el.type === TYPE.time;\r\n}\r\nexport function isSelectElement(el) {\r\n    return el.type === TYPE.select;\r\n}\r\nexport function isPluralElement(el) {\r\n    return el.type === TYPE.plural;\r\n}\r\nexport function isNumberSkeleton(el) {\r\n    return el.type === 0 /* number */;\r\n}\r\nexport function isDateTimeSkeleton(el) {\r\n    return el.type === 1 /* dateTime */;\r\n}\r\nexport function createLiteralElement(value) {\r\n    return {\r\n        type: TYPE.literal,\r\n        value: value,\r\n    };\r\n}\r\nexport function createNumberElement(value, style) {\r\n    return {\r\n        type: TYPE.number,\r\n        value: value,\r\n        style: style,\r\n    };\r\n}\r\n","// tslint:disable:only-arrow-functions\r\n// tslint:disable:object-literal-shorthand\r\n// tslint:disable:trailing-comma\r\n// tslint:disable:object-literal-sort-keys\r\n// tslint:disable:one-variable-per-declaration\r\n// tslint:disable:max-line-length\r\n// tslint:disable:no-consecutive-blank-lines\r\n// tslint:disable:align\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.6 )\r\n//\r\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\r\nimport { TYPE, } from './types';\r\nvar SyntaxError = /** @class */ (function (_super) {\r\n    __extends(SyntaxError, _super);\r\n    function SyntaxError(message, expected, found, location) {\r\n        var _this = _super.call(this) || this;\r\n        _this.message = message;\r\n        _this.expected = expected;\r\n        _this.found = found;\r\n        _this.location = location;\r\n        _this.name = \"SyntaxError\";\r\n        if (typeof Error.captureStackTrace === \"function\") {\r\n            Error.captureStackTrace(_this, SyntaxError);\r\n        }\r\n        return _this;\r\n    }\r\n    SyntaxError.buildMessage = function (expected, found) {\r\n        function hex(ch) {\r\n            return ch.charCodeAt(0).toString(16).toUpperCase();\r\n        }\r\n        function literalEscape(s) {\r\n            return s\r\n                .replace(/\\\\/g, \"\\\\\\\\\")\r\n                .replace(/\"/g, \"\\\\\\\"\")\r\n                .replace(/\\0/g, \"\\\\0\")\r\n                .replace(/\\t/g, \"\\\\t\")\r\n                .replace(/\\n/g, \"\\\\n\")\r\n                .replace(/\\r/g, \"\\\\r\")\r\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\r\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\r\n        }\r\n        function classEscape(s) {\r\n            return s\r\n                .replace(/\\\\/g, \"\\\\\\\\\")\r\n                .replace(/\\]/g, \"\\\\]\")\r\n                .replace(/\\^/g, \"\\\\^\")\r\n                .replace(/-/g, \"\\\\-\")\r\n                .replace(/\\0/g, \"\\\\0\")\r\n                .replace(/\\t/g, \"\\\\t\")\r\n                .replace(/\\n/g, \"\\\\n\")\r\n                .replace(/\\r/g, \"\\\\r\")\r\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\r\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\r\n        }\r\n        function describeExpectation(expectation) {\r\n            switch (expectation.type) {\r\n                case \"literal\":\r\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\r\n                case \"class\":\r\n                    var escapedParts = expectation.parts.map(function (part) {\r\n                        return Array.isArray(part)\r\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\r\n                            : classEscape(part);\r\n                    });\r\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\r\n                case \"any\":\r\n                    return \"any character\";\r\n                case \"end\":\r\n                    return \"end of input\";\r\n                case \"other\":\r\n                    return expectation.description;\r\n            }\r\n        }\r\n        function describeExpected(expected1) {\r\n            var descriptions = expected1.map(describeExpectation);\r\n            var i;\r\n            var j;\r\n            descriptions.sort();\r\n            if (descriptions.length > 0) {\r\n                for (i = 1, j = 1; i < descriptions.length; i++) {\r\n                    if (descriptions[i - 1] !== descriptions[i]) {\r\n                        descriptions[j] = descriptions[i];\r\n                        j++;\r\n                    }\r\n                }\r\n                descriptions.length = j;\r\n            }\r\n            switch (descriptions.length) {\r\n                case 1:\r\n                    return descriptions[0];\r\n                case 2:\r\n                    return descriptions[0] + \" or \" + descriptions[1];\r\n                default:\r\n                    return descriptions.slice(0, -1).join(\", \")\r\n                        + \", or \"\r\n                        + descriptions[descriptions.length - 1];\r\n            }\r\n        }\r\n        function describeFound(found1) {\r\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\r\n        }\r\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\r\n    };\r\n    return SyntaxError;\r\n}(Error));\r\nexport { SyntaxError };\r\nfunction peg$parse(input, options) {\r\n    options = options !== undefined ? options : {};\r\n    var peg$FAILED = {};\r\n    var peg$startRuleFunctions = { start: peg$parsestart };\r\n    var peg$startRuleFunction = peg$parsestart;\r\n    var peg$c0 = function (parts) {\r\n        return parts.join('');\r\n    };\r\n    var peg$c1 = function (messageText) {\r\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\r\n    };\r\n    var peg$c2 = peg$otherExpectation(\"argumentElement\");\r\n    var peg$c3 = \"{\";\r\n    var peg$c4 = peg$literalExpectation(\"{\", false);\r\n    var peg$c5 = \"}\";\r\n    var peg$c6 = peg$literalExpectation(\"}\", false);\r\n    var peg$c7 = function (value) {\r\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\r\n    };\r\n    var peg$c8 = peg$otherExpectation(\"numberSkeletonId\");\r\n    var peg$c9 = /^['\\/{}]/;\r\n    var peg$c10 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\r\n    var peg$c11 = peg$anyExpectation();\r\n    var peg$c12 = peg$otherExpectation(\"numberSkeletonTokenOption\");\r\n    var peg$c13 = \"/\";\r\n    var peg$c14 = peg$literalExpectation(\"/\", false);\r\n    var peg$c15 = function (option) { return option; };\r\n    var peg$c16 = peg$otherExpectation(\"numberSkeletonToken\");\r\n    var peg$c17 = function (stem, options) {\r\n        return { stem: stem, options: options };\r\n    };\r\n    var peg$c18 = function (tokens) {\r\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\r\n    };\r\n    var peg$c19 = \"::\";\r\n    var peg$c20 = peg$literalExpectation(\"::\", false);\r\n    var peg$c21 = function (skeleton) { return skeleton; };\r\n    var peg$c22 = function (style) { return style.replace(/\\s*$/, ''); };\r\n    var peg$c23 = \",\";\r\n    var peg$c24 = peg$literalExpectation(\",\", false);\r\n    var peg$c25 = \"number\";\r\n    var peg$c26 = peg$literalExpectation(\"number\", false);\r\n    var peg$c27 = function (value, type, style) {\r\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\r\n    };\r\n    var peg$c28 = \"'\";\r\n    var peg$c29 = peg$literalExpectation(\"'\", false);\r\n    var peg$c30 = /^[^']/;\r\n    var peg$c31 = peg$classExpectation([\"'\"], true, false);\r\n    var peg$c32 = /^[^a-zA-Z'{}]/;\r\n    var peg$c33 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\r\n    var peg$c34 = /^[a-zA-Z]/;\r\n    var peg$c35 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\r\n    var peg$c36 = function (pattern) {\r\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\r\n    };\r\n    var peg$c37 = \"date\";\r\n    var peg$c38 = peg$literalExpectation(\"date\", false);\r\n    var peg$c39 = \"time\";\r\n    var peg$c40 = peg$literalExpectation(\"time\", false);\r\n    var peg$c41 = \"plural\";\r\n    var peg$c42 = peg$literalExpectation(\"plural\", false);\r\n    var peg$c43 = \"selectordinal\";\r\n    var peg$c44 = peg$literalExpectation(\"selectordinal\", false);\r\n    var peg$c45 = \"offset:\";\r\n    var peg$c46 = peg$literalExpectation(\"offset:\", false);\r\n    var peg$c47 = function (value, pluralType, offset, options) {\r\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\r\n                var id = _a.id, value = _a.value, location = _a.location;\r\n                all[id] = {\r\n                    value: value,\r\n                    location: location\r\n                };\r\n                return all;\r\n            }, {}) }, insertLocation());\r\n    };\r\n    var peg$c48 = \"select\";\r\n    var peg$c49 = peg$literalExpectation(\"select\", false);\r\n    var peg$c50 = function (value, options) {\r\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\r\n                var id = _a.id, value = _a.value, location = _a.location;\r\n                all[id] = {\r\n                    value: value,\r\n                    location: location\r\n                };\r\n                return all;\r\n            }, {}) }, insertLocation());\r\n    };\r\n    var peg$c51 = \"=\";\r\n    var peg$c52 = peg$literalExpectation(\"=\", false);\r\n    var peg$c53 = function (id, value) {\r\n        return __assign({ id: id,\r\n            value: value }, insertLocation());\r\n    };\r\n    var peg$c54 = function (id, value) {\r\n        return __assign({ id: id,\r\n            value: value }, insertLocation());\r\n    };\r\n    var peg$c55 = peg$otherExpectation(\"whitespace pattern\");\r\n    var peg$c56 = /^[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\r\n    var peg$c57 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\u200E\", \"\\u200F\", \"\\u2028\", \"\\u2029\"], false, false);\r\n    var peg$c58 = peg$otherExpectation(\"syntax pattern\");\r\n    var peg$c59 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\r\n    var peg$c60 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\r\n    var peg$c61 = peg$otherExpectation(\"optional whitespace\");\r\n    var peg$c62 = peg$otherExpectation(\"number\");\r\n    var peg$c63 = \"-\";\r\n    var peg$c64 = peg$literalExpectation(\"-\", false);\r\n    var peg$c65 = function (negative, num) {\r\n        return num\r\n            ? negative\r\n                ? -num\r\n                : num\r\n            : 0;\r\n    };\r\n    var peg$c66 = peg$otherExpectation(\"apostrophe\");\r\n    var peg$c67 = peg$otherExpectation(\"double apostrophes\");\r\n    var peg$c68 = \"''\";\r\n    var peg$c69 = peg$literalExpectation(\"''\", false);\r\n    var peg$c70 = function () { return \"'\"; };\r\n    var peg$c71 = /^[{}]/;\r\n    var peg$c72 = peg$classExpectation([\"{\", \"}\"], false, false);\r\n    var peg$c73 = function (escapedChar, quotedChars) {\r\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\r\n    };\r\n    var peg$c74 = /^[^{}]/;\r\n    var peg$c75 = peg$classExpectation([\"{\", \"}\"], true, false);\r\n    var peg$c76 = peg$otherExpectation(\"argNameOrNumber\");\r\n    var peg$c77 = peg$otherExpectation(\"argNumber\");\r\n    var peg$c78 = \"0\";\r\n    var peg$c79 = peg$literalExpectation(\"0\", false);\r\n    var peg$c80 = function () { return 0; };\r\n    var peg$c81 = /^[1-9]/;\r\n    var peg$c82 = peg$classExpectation([[\"1\", \"9\"]], false, false);\r\n    var peg$c83 = /^[0-9]/;\r\n    var peg$c84 = peg$classExpectation([[\"0\", \"9\"]], false, false);\r\n    var peg$c85 = function (digits) {\r\n        return parseInt(digits.join(''), 10);\r\n    };\r\n    var peg$c86 = peg$otherExpectation(\"argName\");\r\n    var peg$currPos = 0;\r\n    var peg$savedPos = 0;\r\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\r\n    var peg$maxFailPos = 0;\r\n    var peg$maxFailExpected = [];\r\n    var peg$silentFails = 0;\r\n    var peg$result;\r\n    if (options.startRule !== undefined) {\r\n        if (!(options.startRule in peg$startRuleFunctions)) {\r\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\r\n        }\r\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\r\n    }\r\n    function text() {\r\n        return input.substring(peg$savedPos, peg$currPos);\r\n    }\r\n    function location() {\r\n        return peg$computeLocation(peg$savedPos, peg$currPos);\r\n    }\r\n    function expected(description, location1) {\r\n        location1 = location1 !== undefined\r\n            ? location1\r\n            : peg$computeLocation(peg$savedPos, peg$currPos);\r\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\r\n    }\r\n    function error(message, location1) {\r\n        location1 = location1 !== undefined\r\n            ? location1\r\n            : peg$computeLocation(peg$savedPos, peg$currPos);\r\n        throw peg$buildSimpleError(message, location1);\r\n    }\r\n    function peg$literalExpectation(text1, ignoreCase) {\r\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\r\n    }\r\n    function peg$classExpectation(parts, inverted, ignoreCase) {\r\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\r\n    }\r\n    function peg$anyExpectation() {\r\n        return { type: \"any\" };\r\n    }\r\n    function peg$endExpectation() {\r\n        return { type: \"end\" };\r\n    }\r\n    function peg$otherExpectation(description) {\r\n        return { type: \"other\", description: description };\r\n    }\r\n    function peg$computePosDetails(pos) {\r\n        var details = peg$posDetailsCache[pos];\r\n        var p;\r\n        if (details) {\r\n            return details;\r\n        }\r\n        else {\r\n            p = pos - 1;\r\n            while (!peg$posDetailsCache[p]) {\r\n                p--;\r\n            }\r\n            details = peg$posDetailsCache[p];\r\n            details = {\r\n                line: details.line,\r\n                column: details.column\r\n            };\r\n            while (p < pos) {\r\n                if (input.charCodeAt(p) === 10) {\r\n                    details.line++;\r\n                    details.column = 1;\r\n                }\r\n                else {\r\n                    details.column++;\r\n                }\r\n                p++;\r\n            }\r\n            peg$posDetailsCache[pos] = details;\r\n            return details;\r\n        }\r\n    }\r\n    function peg$computeLocation(startPos, endPos) {\r\n        var startPosDetails = peg$computePosDetails(startPos);\r\n        var endPosDetails = peg$computePosDetails(endPos);\r\n        return {\r\n            start: {\r\n                offset: startPos,\r\n                line: startPosDetails.line,\r\n                column: startPosDetails.column\r\n            },\r\n            end: {\r\n                offset: endPos,\r\n                line: endPosDetails.line,\r\n                column: endPosDetails.column\r\n            }\r\n        };\r\n    }\r\n    function peg$fail(expected1) {\r\n        if (peg$currPos < peg$maxFailPos) {\r\n            return;\r\n        }\r\n        if (peg$currPos > peg$maxFailPos) {\r\n            peg$maxFailPos = peg$currPos;\r\n            peg$maxFailExpected = [];\r\n        }\r\n        peg$maxFailExpected.push(expected1);\r\n    }\r\n    function peg$buildSimpleError(message, location1) {\r\n        return new SyntaxError(message, [], \"\", location1);\r\n    }\r\n    function peg$buildStructuredError(expected1, found, location1) {\r\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\r\n    }\r\n    function peg$parsestart() {\r\n        var s0;\r\n        s0 = peg$parsemessage();\r\n        return s0;\r\n    }\r\n    function peg$parsemessage() {\r\n        var s0, s1;\r\n        s0 = [];\r\n        s1 = peg$parsemessageElement();\r\n        while (s1 !== peg$FAILED) {\r\n            s0.push(s1);\r\n            s1 = peg$parsemessageElement();\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsemessageElement() {\r\n        var s0;\r\n        s0 = peg$parseliteralElement();\r\n        if (s0 === peg$FAILED) {\r\n            s0 = peg$parseargumentElement();\r\n            if (s0 === peg$FAILED) {\r\n                s0 = peg$parsesimpleFormatElement();\r\n                if (s0 === peg$FAILED) {\r\n                    s0 = peg$parsepluralElement();\r\n                    if (s0 === peg$FAILED) {\r\n                        s0 = peg$parseselectElement();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsemessageText() {\r\n        var s0, s1, s2;\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parsedoubleApostrophes();\r\n        if (s2 === peg$FAILED) {\r\n            s2 = peg$parsequotedString();\r\n            if (s2 === peg$FAILED) {\r\n                s2 = peg$parseunquotedString();\r\n            }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n            while (s2 !== peg$FAILED) {\r\n                s1.push(s2);\r\n                s2 = peg$parsedoubleApostrophes();\r\n                if (s2 === peg$FAILED) {\r\n                    s2 = peg$parsequotedString();\r\n                    if (s2 === peg$FAILED) {\r\n                        s2 = peg$parseunquotedString();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c0(s1);\r\n        }\r\n        s0 = s1;\r\n        return s0;\r\n    }\r\n    function peg$parseliteralElement() {\r\n        var s0, s1;\r\n        s0 = peg$currPos;\r\n        s1 = peg$parsemessageText();\r\n        if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c1(s1);\r\n        }\r\n        s0 = s1;\r\n        return s0;\r\n    }\r\n    function peg$parseargumentElement() {\r\n        var s0, s1, s2, s3, s4, s5;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 123) {\r\n            s1 = peg$c3;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c4);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parseargNameOrNumber();\r\n                if (s3 !== peg$FAILED) {\r\n                    s4 = peg$parse_();\r\n                    if (s4 !== peg$FAILED) {\r\n                        if (input.charCodeAt(peg$currPos) === 125) {\r\n                            s5 = peg$c5;\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s5 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c6);\r\n                            }\r\n                        }\r\n                        if (s5 !== peg$FAILED) {\r\n                            peg$savedPos = s0;\r\n                            s1 = peg$c7(s3);\r\n                            s0 = s1;\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c2);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsenumberSkeletonId() {\r\n        var s0, s1, s2, s3, s4;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$currPos;\r\n        s3 = peg$currPos;\r\n        peg$silentFails++;\r\n        s4 = peg$parsepatternWhiteSpace();\r\n        if (s4 === peg$FAILED) {\r\n            if (peg$c9.test(input.charAt(peg$currPos))) {\r\n                s4 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n            }\r\n            else {\r\n                s4 = peg$FAILED;\r\n                if (peg$silentFails === 0) {\r\n                    peg$fail(peg$c10);\r\n                }\r\n            }\r\n        }\r\n        peg$silentFails--;\r\n        if (s4 === peg$FAILED) {\r\n            s3 = undefined;\r\n        }\r\n        else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n            if (input.length > peg$currPos) {\r\n                s4 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n            }\r\n            else {\r\n                s4 = peg$FAILED;\r\n                if (peg$silentFails === 0) {\r\n                    peg$fail(peg$c11);\r\n                }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n                s3 = [s3, s4];\r\n                s2 = s3;\r\n            }\r\n            else {\r\n                peg$currPos = s2;\r\n                s2 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n            while (s2 !== peg$FAILED) {\r\n                s1.push(s2);\r\n                s2 = peg$currPos;\r\n                s3 = peg$currPos;\r\n                peg$silentFails++;\r\n                s4 = peg$parsepatternWhiteSpace();\r\n                if (s4 === peg$FAILED) {\r\n                    if (peg$c9.test(input.charAt(peg$currPos))) {\r\n                        s4 = input.charAt(peg$currPos);\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c10);\r\n                        }\r\n                    }\r\n                }\r\n                peg$silentFails--;\r\n                if (s4 === peg$FAILED) {\r\n                    s3 = undefined;\r\n                }\r\n                else {\r\n                    peg$currPos = s3;\r\n                    s3 = peg$FAILED;\r\n                }\r\n                if (s3 !== peg$FAILED) {\r\n                    if (input.length > peg$currPos) {\r\n                        s4 = input.charAt(peg$currPos);\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c11);\r\n                        }\r\n                    }\r\n                    if (s4 !== peg$FAILED) {\r\n                        s3 = [s3, s4];\r\n                        s2 = s3;\r\n                    }\r\n                    else {\r\n                        peg$currPos = s2;\r\n                        s2 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s2;\r\n                    s2 = peg$FAILED;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s0 = input.substring(s0, peg$currPos);\r\n        }\r\n        else {\r\n            s0 = s1;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c8);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsenumberSkeletonTokenOption() {\r\n        var s0, s1, s2;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 47) {\r\n            s1 = peg$c13;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c14);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parsenumberSkeletonId();\r\n            if (s2 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c15(s2);\r\n                s0 = s1;\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c12);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsenumberSkeletonToken() {\r\n        var s0, s1, s2, s3, s4;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        s1 = peg$parse_();\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parsenumberSkeletonId();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = [];\r\n                s4 = peg$parsenumberSkeletonTokenOption();\r\n                while (s4 !== peg$FAILED) {\r\n                    s3.push(s4);\r\n                    s4 = peg$parsenumberSkeletonTokenOption();\r\n                }\r\n                if (s3 !== peg$FAILED) {\r\n                    peg$savedPos = s0;\r\n                    s1 = peg$c17(s2, s3);\r\n                    s0 = s1;\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c16);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsenumberSkeleton() {\r\n        var s0, s1, s2;\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parsenumberSkeletonToken();\r\n        if (s2 !== peg$FAILED) {\r\n            while (s2 !== peg$FAILED) {\r\n                s1.push(s2);\r\n                s2 = peg$parsenumberSkeletonToken();\r\n            }\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c18(s1);\r\n        }\r\n        s0 = s1;\r\n        return s0;\r\n    }\r\n    function peg$parsenumberArgStyle() {\r\n        var s0, s1, s2;\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 2) === peg$c19) {\r\n            s1 = peg$c19;\r\n            peg$currPos += 2;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c20);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parsenumberSkeleton();\r\n            if (s2 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c21(s2);\r\n                s0 = s1;\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n            s0 = peg$currPos;\r\n            s1 = peg$parsemessageText();\r\n            if (s1 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c22(s1);\r\n            }\r\n            s0 = s1;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsenumberFormatElement() {\r\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 123) {\r\n            s1 = peg$c3;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c4);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parseargNameOrNumber();\r\n                if (s3 !== peg$FAILED) {\r\n                    s4 = peg$parse_();\r\n                    if (s4 !== peg$FAILED) {\r\n                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                            s5 = peg$c23;\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s5 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c24);\r\n                            }\r\n                        }\r\n                        if (s5 !== peg$FAILED) {\r\n                            s6 = peg$parse_();\r\n                            if (s6 !== peg$FAILED) {\r\n                                if (input.substr(peg$currPos, 6) === peg$c25) {\r\n                                    s7 = peg$c25;\r\n                                    peg$currPos += 6;\r\n                                }\r\n                                else {\r\n                                    s7 = peg$FAILED;\r\n                                    if (peg$silentFails === 0) {\r\n                                        peg$fail(peg$c26);\r\n                                    }\r\n                                }\r\n                                if (s7 !== peg$FAILED) {\r\n                                    s8 = peg$parse_();\r\n                                    if (s8 !== peg$FAILED) {\r\n                                        s9 = peg$currPos;\r\n                                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                                            s10 = peg$c23;\r\n                                            peg$currPos++;\r\n                                        }\r\n                                        else {\r\n                                            s10 = peg$FAILED;\r\n                                            if (peg$silentFails === 0) {\r\n                                                peg$fail(peg$c24);\r\n                                            }\r\n                                        }\r\n                                        if (s10 !== peg$FAILED) {\r\n                                            s11 = peg$parse_();\r\n                                            if (s11 !== peg$FAILED) {\r\n                                                s12 = peg$parsenumberArgStyle();\r\n                                                if (s12 !== peg$FAILED) {\r\n                                                    s10 = [s10, s11, s12];\r\n                                                    s9 = s10;\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s9;\r\n                                                    s9 = peg$FAILED;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                peg$currPos = s9;\r\n                                                s9 = peg$FAILED;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            peg$currPos = s9;\r\n                                            s9 = peg$FAILED;\r\n                                        }\r\n                                        if (s9 === peg$FAILED) {\r\n                                            s9 = null;\r\n                                        }\r\n                                        if (s9 !== peg$FAILED) {\r\n                                            s10 = peg$parse_();\r\n                                            if (s10 !== peg$FAILED) {\r\n                                                if (input.charCodeAt(peg$currPos) === 125) {\r\n                                                    s11 = peg$c5;\r\n                                                    peg$currPos++;\r\n                                                }\r\n                                                else {\r\n                                                    s11 = peg$FAILED;\r\n                                                    if (peg$silentFails === 0) {\r\n                                                        peg$fail(peg$c6);\r\n                                                    }\r\n                                                }\r\n                                                if (s11 !== peg$FAILED) {\r\n                                                    peg$savedPos = s0;\r\n                                                    s1 = peg$c27(s3, s7, s9);\r\n                                                    s0 = s1;\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s0;\r\n                                                    s0 = peg$FAILED;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                peg$currPos = s0;\r\n                                                s0 = peg$FAILED;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            peg$currPos = s0;\r\n                                            s0 = peg$FAILED;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        peg$currPos = s0;\r\n                                        s0 = peg$FAILED;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    peg$currPos = s0;\r\n                                    s0 = peg$FAILED;\r\n                                }\r\n                            }\r\n                            else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                            }\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsedateTimeSkeletonLiteral() {\r\n        var s0, s1, s2, s3;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 39) {\r\n            s1 = peg$c28;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c29);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = [];\r\n            s3 = peg$parsedoubleApostrophes();\r\n            if (s3 === peg$FAILED) {\r\n                if (peg$c30.test(input.charAt(peg$currPos))) {\r\n                    s3 = input.charAt(peg$currPos);\r\n                    peg$currPos++;\r\n                }\r\n                else {\r\n                    s3 = peg$FAILED;\r\n                    if (peg$silentFails === 0) {\r\n                        peg$fail(peg$c31);\r\n                    }\r\n                }\r\n            }\r\n            if (s3 !== peg$FAILED) {\r\n                while (s3 !== peg$FAILED) {\r\n                    s2.push(s3);\r\n                    s3 = peg$parsedoubleApostrophes();\r\n                    if (s3 === peg$FAILED) {\r\n                        if (peg$c30.test(input.charAt(peg$currPos))) {\r\n                            s3 = input.charAt(peg$currPos);\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s3 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c31);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                s2 = peg$FAILED;\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n                if (input.charCodeAt(peg$currPos) === 39) {\r\n                    s3 = peg$c28;\r\n                    peg$currPos++;\r\n                }\r\n                else {\r\n                    s3 = peg$FAILED;\r\n                    if (peg$silentFails === 0) {\r\n                        peg$fail(peg$c29);\r\n                    }\r\n                }\r\n                if (s3 !== peg$FAILED) {\r\n                    s1 = [s1, s2, s3];\r\n                    s0 = s1;\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n            s0 = [];\r\n            s1 = peg$parsedoubleApostrophes();\r\n            if (s1 === peg$FAILED) {\r\n                if (peg$c32.test(input.charAt(peg$currPos))) {\r\n                    s1 = input.charAt(peg$currPos);\r\n                    peg$currPos++;\r\n                }\r\n                else {\r\n                    s1 = peg$FAILED;\r\n                    if (peg$silentFails === 0) {\r\n                        peg$fail(peg$c33);\r\n                    }\r\n                }\r\n            }\r\n            if (s1 !== peg$FAILED) {\r\n                while (s1 !== peg$FAILED) {\r\n                    s0.push(s1);\r\n                    s1 = peg$parsedoubleApostrophes();\r\n                    if (s1 === peg$FAILED) {\r\n                        if (peg$c32.test(input.charAt(peg$currPos))) {\r\n                            s1 = input.charAt(peg$currPos);\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s1 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c33);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsedateTimeSkeletonPattern() {\r\n        var s0, s1;\r\n        s0 = [];\r\n        if (peg$c34.test(input.charAt(peg$currPos))) {\r\n            s1 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c35);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            while (s1 !== peg$FAILED) {\r\n                s0.push(s1);\r\n                if (peg$c34.test(input.charAt(peg$currPos))) {\r\n                    s1 = input.charAt(peg$currPos);\r\n                    peg$currPos++;\r\n                }\r\n                else {\r\n                    s1 = peg$FAILED;\r\n                    if (peg$silentFails === 0) {\r\n                        peg$fail(peg$c35);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsedateTimeSkeleton() {\r\n        var s0, s1, s2, s3;\r\n        s0 = peg$currPos;\r\n        s1 = peg$currPos;\r\n        s2 = [];\r\n        s3 = peg$parsedateTimeSkeletonLiteral();\r\n        if (s3 === peg$FAILED) {\r\n            s3 = peg$parsedateTimeSkeletonPattern();\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n            while (s3 !== peg$FAILED) {\r\n                s2.push(s3);\r\n                s3 = peg$parsedateTimeSkeletonLiteral();\r\n                if (s3 === peg$FAILED) {\r\n                    s3 = peg$parsedateTimeSkeletonPattern();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n            s1 = input.substring(s1, peg$currPos);\r\n        }\r\n        else {\r\n            s1 = s2;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c36(s1);\r\n        }\r\n        s0 = s1;\r\n        return s0;\r\n    }\r\n    function peg$parsedateOrTimeArgStyle() {\r\n        var s0, s1, s2;\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 2) === peg$c19) {\r\n            s1 = peg$c19;\r\n            peg$currPos += 2;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c20);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parsedateTimeSkeleton();\r\n            if (s2 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c21(s2);\r\n                s0 = s1;\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n            s0 = peg$currPos;\r\n            s1 = peg$parsemessageText();\r\n            if (s1 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c22(s1);\r\n            }\r\n            s0 = s1;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsedateOrTimeFormatElement() {\r\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 123) {\r\n            s1 = peg$c3;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c4);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parseargNameOrNumber();\r\n                if (s3 !== peg$FAILED) {\r\n                    s4 = peg$parse_();\r\n                    if (s4 !== peg$FAILED) {\r\n                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                            s5 = peg$c23;\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s5 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c24);\r\n                            }\r\n                        }\r\n                        if (s5 !== peg$FAILED) {\r\n                            s6 = peg$parse_();\r\n                            if (s6 !== peg$FAILED) {\r\n                                if (input.substr(peg$currPos, 4) === peg$c37) {\r\n                                    s7 = peg$c37;\r\n                                    peg$currPos += 4;\r\n                                }\r\n                                else {\r\n                                    s7 = peg$FAILED;\r\n                                    if (peg$silentFails === 0) {\r\n                                        peg$fail(peg$c38);\r\n                                    }\r\n                                }\r\n                                if (s7 === peg$FAILED) {\r\n                                    if (input.substr(peg$currPos, 4) === peg$c39) {\r\n                                        s7 = peg$c39;\r\n                                        peg$currPos += 4;\r\n                                    }\r\n                                    else {\r\n                                        s7 = peg$FAILED;\r\n                                        if (peg$silentFails === 0) {\r\n                                            peg$fail(peg$c40);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (s7 !== peg$FAILED) {\r\n                                    s8 = peg$parse_();\r\n                                    if (s8 !== peg$FAILED) {\r\n                                        s9 = peg$currPos;\r\n                                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                                            s10 = peg$c23;\r\n                                            peg$currPos++;\r\n                                        }\r\n                                        else {\r\n                                            s10 = peg$FAILED;\r\n                                            if (peg$silentFails === 0) {\r\n                                                peg$fail(peg$c24);\r\n                                            }\r\n                                        }\r\n                                        if (s10 !== peg$FAILED) {\r\n                                            s11 = peg$parse_();\r\n                                            if (s11 !== peg$FAILED) {\r\n                                                s12 = peg$parsedateOrTimeArgStyle();\r\n                                                if (s12 !== peg$FAILED) {\r\n                                                    s10 = [s10, s11, s12];\r\n                                                    s9 = s10;\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s9;\r\n                                                    s9 = peg$FAILED;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                peg$currPos = s9;\r\n                                                s9 = peg$FAILED;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            peg$currPos = s9;\r\n                                            s9 = peg$FAILED;\r\n                                        }\r\n                                        if (s9 === peg$FAILED) {\r\n                                            s9 = null;\r\n                                        }\r\n                                        if (s9 !== peg$FAILED) {\r\n                                            s10 = peg$parse_();\r\n                                            if (s10 !== peg$FAILED) {\r\n                                                if (input.charCodeAt(peg$currPos) === 125) {\r\n                                                    s11 = peg$c5;\r\n                                                    peg$currPos++;\r\n                                                }\r\n                                                else {\r\n                                                    s11 = peg$FAILED;\r\n                                                    if (peg$silentFails === 0) {\r\n                                                        peg$fail(peg$c6);\r\n                                                    }\r\n                                                }\r\n                                                if (s11 !== peg$FAILED) {\r\n                                                    peg$savedPos = s0;\r\n                                                    s1 = peg$c27(s3, s7, s9);\r\n                                                    s0 = s1;\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s0;\r\n                                                    s0 = peg$FAILED;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                peg$currPos = s0;\r\n                                                s0 = peg$FAILED;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            peg$currPos = s0;\r\n                                            s0 = peg$FAILED;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        peg$currPos = s0;\r\n                                        s0 = peg$FAILED;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    peg$currPos = s0;\r\n                                    s0 = peg$FAILED;\r\n                                }\r\n                            }\r\n                            else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                            }\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsesimpleFormatElement() {\r\n        var s0;\r\n        s0 = peg$parsenumberFormatElement();\r\n        if (s0 === peg$FAILED) {\r\n            s0 = peg$parsedateOrTimeFormatElement();\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsepluralElement() {\r\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 123) {\r\n            s1 = peg$c3;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c4);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parseargNameOrNumber();\r\n                if (s3 !== peg$FAILED) {\r\n                    s4 = peg$parse_();\r\n                    if (s4 !== peg$FAILED) {\r\n                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                            s5 = peg$c23;\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s5 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c24);\r\n                            }\r\n                        }\r\n                        if (s5 !== peg$FAILED) {\r\n                            s6 = peg$parse_();\r\n                            if (s6 !== peg$FAILED) {\r\n                                if (input.substr(peg$currPos, 6) === peg$c41) {\r\n                                    s7 = peg$c41;\r\n                                    peg$currPos += 6;\r\n                                }\r\n                                else {\r\n                                    s7 = peg$FAILED;\r\n                                    if (peg$silentFails === 0) {\r\n                                        peg$fail(peg$c42);\r\n                                    }\r\n                                }\r\n                                if (s7 === peg$FAILED) {\r\n                                    if (input.substr(peg$currPos, 13) === peg$c43) {\r\n                                        s7 = peg$c43;\r\n                                        peg$currPos += 13;\r\n                                    }\r\n                                    else {\r\n                                        s7 = peg$FAILED;\r\n                                        if (peg$silentFails === 0) {\r\n                                            peg$fail(peg$c44);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (s7 !== peg$FAILED) {\r\n                                    s8 = peg$parse_();\r\n                                    if (s8 !== peg$FAILED) {\r\n                                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                                            s9 = peg$c23;\r\n                                            peg$currPos++;\r\n                                        }\r\n                                        else {\r\n                                            s9 = peg$FAILED;\r\n                                            if (peg$silentFails === 0) {\r\n                                                peg$fail(peg$c24);\r\n                                            }\r\n                                        }\r\n                                        if (s9 !== peg$FAILED) {\r\n                                            s10 = peg$parse_();\r\n                                            if (s10 !== peg$FAILED) {\r\n                                                s11 = peg$currPos;\r\n                                                if (input.substr(peg$currPos, 7) === peg$c45) {\r\n                                                    s12 = peg$c45;\r\n                                                    peg$currPos += 7;\r\n                                                }\r\n                                                else {\r\n                                                    s12 = peg$FAILED;\r\n                                                    if (peg$silentFails === 0) {\r\n                                                        peg$fail(peg$c46);\r\n                                                    }\r\n                                                }\r\n                                                if (s12 !== peg$FAILED) {\r\n                                                    s13 = peg$parse_();\r\n                                                    if (s13 !== peg$FAILED) {\r\n                                                        s14 = peg$parsenumber();\r\n                                                        if (s14 !== peg$FAILED) {\r\n                                                            s12 = [s12, s13, s14];\r\n                                                            s11 = s12;\r\n                                                        }\r\n                                                        else {\r\n                                                            peg$currPos = s11;\r\n                                                            s11 = peg$FAILED;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        peg$currPos = s11;\r\n                                                        s11 = peg$FAILED;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s11;\r\n                                                    s11 = peg$FAILED;\r\n                                                }\r\n                                                if (s11 === peg$FAILED) {\r\n                                                    s11 = null;\r\n                                                }\r\n                                                if (s11 !== peg$FAILED) {\r\n                                                    s12 = peg$parse_();\r\n                                                    if (s12 !== peg$FAILED) {\r\n                                                        s13 = [];\r\n                                                        s14 = peg$parsepluralOption();\r\n                                                        if (s14 !== peg$FAILED) {\r\n                                                            while (s14 !== peg$FAILED) {\r\n                                                                s13.push(s14);\r\n                                                                s14 = peg$parsepluralOption();\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            s13 = peg$FAILED;\r\n                                                        }\r\n                                                        if (s13 !== peg$FAILED) {\r\n                                                            s14 = peg$parse_();\r\n                                                            if (s14 !== peg$FAILED) {\r\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\r\n                                                                    s15 = peg$c5;\r\n                                                                    peg$currPos++;\r\n                                                                }\r\n                                                                else {\r\n                                                                    s15 = peg$FAILED;\r\n                                                                    if (peg$silentFails === 0) {\r\n                                                                        peg$fail(peg$c6);\r\n                                                                    }\r\n                                                                }\r\n                                                                if (s15 !== peg$FAILED) {\r\n                                                                    peg$savedPos = s0;\r\n                                                                    s1 = peg$c47(s3, s7, s11, s13);\r\n                                                                    s0 = s1;\r\n                                                                }\r\n                                                                else {\r\n                                                                    peg$currPos = s0;\r\n                                                                    s0 = peg$FAILED;\r\n                                                                }\r\n                                                            }\r\n                                                            else {\r\n                                                                peg$currPos = s0;\r\n                                                                s0 = peg$FAILED;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            peg$currPos = s0;\r\n                                                            s0 = peg$FAILED;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        peg$currPos = s0;\r\n                                                        s0 = peg$FAILED;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s0;\r\n                                                    s0 = peg$FAILED;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                peg$currPos = s0;\r\n                                                s0 = peg$FAILED;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            peg$currPos = s0;\r\n                                            s0 = peg$FAILED;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        peg$currPos = s0;\r\n                                        s0 = peg$FAILED;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    peg$currPos = s0;\r\n                                    s0 = peg$FAILED;\r\n                                }\r\n                            }\r\n                            else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                            }\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseselectElement() {\r\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 123) {\r\n            s1 = peg$c3;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c4);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parse_();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parseargNameOrNumber();\r\n                if (s3 !== peg$FAILED) {\r\n                    s4 = peg$parse_();\r\n                    if (s4 !== peg$FAILED) {\r\n                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                            s5 = peg$c23;\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s5 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c24);\r\n                            }\r\n                        }\r\n                        if (s5 !== peg$FAILED) {\r\n                            s6 = peg$parse_();\r\n                            if (s6 !== peg$FAILED) {\r\n                                if (input.substr(peg$currPos, 6) === peg$c48) {\r\n                                    s7 = peg$c48;\r\n                                    peg$currPos += 6;\r\n                                }\r\n                                else {\r\n                                    s7 = peg$FAILED;\r\n                                    if (peg$silentFails === 0) {\r\n                                        peg$fail(peg$c49);\r\n                                    }\r\n                                }\r\n                                if (s7 !== peg$FAILED) {\r\n                                    s8 = peg$parse_();\r\n                                    if (s8 !== peg$FAILED) {\r\n                                        if (input.charCodeAt(peg$currPos) === 44) {\r\n                                            s9 = peg$c23;\r\n                                            peg$currPos++;\r\n                                        }\r\n                                        else {\r\n                                            s9 = peg$FAILED;\r\n                                            if (peg$silentFails === 0) {\r\n                                                peg$fail(peg$c24);\r\n                                            }\r\n                                        }\r\n                                        if (s9 !== peg$FAILED) {\r\n                                            s10 = peg$parse_();\r\n                                            if (s10 !== peg$FAILED) {\r\n                                                s11 = [];\r\n                                                s12 = peg$parseselectOption();\r\n                                                if (s12 !== peg$FAILED) {\r\n                                                    while (s12 !== peg$FAILED) {\r\n                                                        s11.push(s12);\r\n                                                        s12 = peg$parseselectOption();\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    s11 = peg$FAILED;\r\n                                                }\r\n                                                if (s11 !== peg$FAILED) {\r\n                                                    s12 = peg$parse_();\r\n                                                    if (s12 !== peg$FAILED) {\r\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\r\n                                                            s13 = peg$c5;\r\n                                                            peg$currPos++;\r\n                                                        }\r\n                                                        else {\r\n                                                            s13 = peg$FAILED;\r\n                                                            if (peg$silentFails === 0) {\r\n                                                                peg$fail(peg$c6);\r\n                                                            }\r\n                                                        }\r\n                                                        if (s13 !== peg$FAILED) {\r\n                                                            peg$savedPos = s0;\r\n                                                            s1 = peg$c50(s3, s11);\r\n                                                            s0 = s1;\r\n                                                        }\r\n                                                        else {\r\n                                                            peg$currPos = s0;\r\n                                                            s0 = peg$FAILED;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        peg$currPos = s0;\r\n                                                        s0 = peg$FAILED;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    peg$currPos = s0;\r\n                                                    s0 = peg$FAILED;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                peg$currPos = s0;\r\n                                                s0 = peg$FAILED;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            peg$currPos = s0;\r\n                                            s0 = peg$FAILED;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        peg$currPos = s0;\r\n                                        s0 = peg$FAILED;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    peg$currPos = s0;\r\n                                    s0 = peg$FAILED;\r\n                                }\r\n                            }\r\n                            else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                            }\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsepluralRuleSelectValue() {\r\n        var s0, s1, s2, s3;\r\n        s0 = peg$currPos;\r\n        s1 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 61) {\r\n            s2 = peg$c51;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s2 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c52);\r\n            }\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n            s3 = peg$parsenumber();\r\n            if (s3 !== peg$FAILED) {\r\n                s2 = [s2, s3];\r\n                s1 = s2;\r\n            }\r\n            else {\r\n                peg$currPos = s1;\r\n                s1 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s1;\r\n            s1 = peg$FAILED;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s0 = input.substring(s0, peg$currPos);\r\n        }\r\n        else {\r\n            s0 = s1;\r\n        }\r\n        if (s0 === peg$FAILED) {\r\n            s0 = peg$parseargName();\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseselectOption() {\r\n        var s0, s1, s2, s3, s4, s5, s6;\r\n        s0 = peg$currPos;\r\n        s1 = peg$parse_();\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parseargName();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parse_();\r\n                if (s3 !== peg$FAILED) {\r\n                    if (input.charCodeAt(peg$currPos) === 123) {\r\n                        s4 = peg$c3;\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c4);\r\n                        }\r\n                    }\r\n                    if (s4 !== peg$FAILED) {\r\n                        s5 = peg$parsemessage();\r\n                        if (s5 !== peg$FAILED) {\r\n                            if (input.charCodeAt(peg$currPos) === 125) {\r\n                                s6 = peg$c5;\r\n                                peg$currPos++;\r\n                            }\r\n                            else {\r\n                                s6 = peg$FAILED;\r\n                                if (peg$silentFails === 0) {\r\n                                    peg$fail(peg$c6);\r\n                                }\r\n                            }\r\n                            if (s6 !== peg$FAILED) {\r\n                                peg$savedPos = s0;\r\n                                s1 = peg$c53(s2, s5);\r\n                                s0 = s1;\r\n                            }\r\n                            else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                            }\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsepluralOption() {\r\n        var s0, s1, s2, s3, s4, s5, s6;\r\n        s0 = peg$currPos;\r\n        s1 = peg$parse_();\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parsepluralRuleSelectValue();\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$parse_();\r\n                if (s3 !== peg$FAILED) {\r\n                    if (input.charCodeAt(peg$currPos) === 123) {\r\n                        s4 = peg$c3;\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c4);\r\n                        }\r\n                    }\r\n                    if (s4 !== peg$FAILED) {\r\n                        s5 = peg$parsemessage();\r\n                        if (s5 !== peg$FAILED) {\r\n                            if (input.charCodeAt(peg$currPos) === 125) {\r\n                                s6 = peg$c5;\r\n                                peg$currPos++;\r\n                            }\r\n                            else {\r\n                                s6 = peg$FAILED;\r\n                                if (peg$silentFails === 0) {\r\n                                    peg$fail(peg$c6);\r\n                                }\r\n                            }\r\n                            if (s6 !== peg$FAILED) {\r\n                                peg$savedPos = s0;\r\n                                s1 = peg$c54(s2, s5);\r\n                                s0 = s1;\r\n                            }\r\n                            else {\r\n                                peg$currPos = s0;\r\n                                s0 = peg$FAILED;\r\n                            }\r\n                        }\r\n                        else {\r\n                            peg$currPos = s0;\r\n                            s0 = peg$FAILED;\r\n                        }\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsepatternWhiteSpace() {\r\n        var s0, s1;\r\n        peg$silentFails++;\r\n        if (peg$c56.test(input.charAt(peg$currPos))) {\r\n            s0 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s0 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c57);\r\n            }\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c55);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsepatternSyntax() {\r\n        var s0, s1;\r\n        peg$silentFails++;\r\n        if (peg$c59.test(input.charAt(peg$currPos))) {\r\n            s0 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s0 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c60);\r\n            }\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c58);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parse_() {\r\n        var s0, s1, s2;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$parsepatternWhiteSpace();\r\n        while (s2 !== peg$FAILED) {\r\n            s1.push(s2);\r\n            s2 = peg$parsepatternWhiteSpace();\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s0 = input.substring(s0, peg$currPos);\r\n        }\r\n        else {\r\n            s0 = s1;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c61);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsenumber() {\r\n        var s0, s1, s2;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 45) {\r\n            s1 = peg$c63;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c64);\r\n            }\r\n        }\r\n        if (s1 === peg$FAILED) {\r\n            s1 = null;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s2 = peg$parseargNumber();\r\n            if (s2 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c65(s1, s2);\r\n                s0 = s1;\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c62);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseapostrophe() {\r\n        var s0, s1;\r\n        peg$silentFails++;\r\n        if (input.charCodeAt(peg$currPos) === 39) {\r\n            s0 = peg$c28;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s0 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c29);\r\n            }\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c66);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsedoubleApostrophes() {\r\n        var s0, s1;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        if (input.substr(peg$currPos, 2) === peg$c68) {\r\n            s1 = peg$c68;\r\n            peg$currPos += 2;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c69);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c70();\r\n        }\r\n        s0 = s1;\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c67);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parsequotedString() {\r\n        var s0, s1, s2, s3, s4, s5;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 39) {\r\n            s1 = peg$c28;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c29);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            if (peg$c71.test(input.charAt(peg$currPos))) {\r\n                s2 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n            }\r\n            else {\r\n                s2 = peg$FAILED;\r\n                if (peg$silentFails === 0) {\r\n                    peg$fail(peg$c72);\r\n                }\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = peg$currPos;\r\n                s4 = [];\r\n                if (input.substr(peg$currPos, 2) === peg$c68) {\r\n                    s5 = peg$c68;\r\n                    peg$currPos += 2;\r\n                }\r\n                else {\r\n                    s5 = peg$FAILED;\r\n                    if (peg$silentFails === 0) {\r\n                        peg$fail(peg$c69);\r\n                    }\r\n                }\r\n                if (s5 === peg$FAILED) {\r\n                    if (peg$c30.test(input.charAt(peg$currPos))) {\r\n                        s5 = input.charAt(peg$currPos);\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s5 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c31);\r\n                        }\r\n                    }\r\n                }\r\n                while (s5 !== peg$FAILED) {\r\n                    s4.push(s5);\r\n                    if (input.substr(peg$currPos, 2) === peg$c68) {\r\n                        s5 = peg$c68;\r\n                        peg$currPos += 2;\r\n                    }\r\n                    else {\r\n                        s5 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c69);\r\n                        }\r\n                    }\r\n                    if (s5 === peg$FAILED) {\r\n                        if (peg$c30.test(input.charAt(peg$currPos))) {\r\n                            s5 = input.charAt(peg$currPos);\r\n                            peg$currPos++;\r\n                        }\r\n                        else {\r\n                            s5 = peg$FAILED;\r\n                            if (peg$silentFails === 0) {\r\n                                peg$fail(peg$c31);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (s4 !== peg$FAILED) {\r\n                    s3 = input.substring(s3, peg$currPos);\r\n                }\r\n                else {\r\n                    s3 = s4;\r\n                }\r\n                if (s3 !== peg$FAILED) {\r\n                    if (input.charCodeAt(peg$currPos) === 39) {\r\n                        s4 = peg$c28;\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c29);\r\n                        }\r\n                    }\r\n                    if (s4 !== peg$FAILED) {\r\n                        peg$savedPos = s0;\r\n                        s1 = peg$c73(s2, s3);\r\n                        s0 = s1;\r\n                    }\r\n                    else {\r\n                        peg$currPos = s0;\r\n                        s0 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s0;\r\n                    s0 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s0;\r\n                s0 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s0;\r\n            s0 = peg$FAILED;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseunquotedString() {\r\n        var s0, s1;\r\n        s0 = peg$currPos;\r\n        if (peg$c74.test(input.charAt(peg$currPos))) {\r\n            s1 = input.charAt(peg$currPos);\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c75);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s0 = input.substring(s0, peg$currPos);\r\n        }\r\n        else {\r\n            s0 = s1;\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseargNameOrNumber() {\r\n        var s0, s1;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        s1 = peg$parseargNumber();\r\n        if (s1 === peg$FAILED) {\r\n            s1 = peg$parseargName();\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s0 = input.substring(s0, peg$currPos);\r\n        }\r\n        else {\r\n            s0 = s1;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c76);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseargNumber() {\r\n        var s0, s1, s2, s3, s4;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        if (input.charCodeAt(peg$currPos) === 48) {\r\n            s1 = peg$c78;\r\n            peg$currPos++;\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c79);\r\n            }\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            peg$savedPos = s0;\r\n            s1 = peg$c80();\r\n        }\r\n        s0 = s1;\r\n        if (s0 === peg$FAILED) {\r\n            s0 = peg$currPos;\r\n            s1 = peg$currPos;\r\n            if (peg$c81.test(input.charAt(peg$currPos))) {\r\n                s2 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n            }\r\n            else {\r\n                s2 = peg$FAILED;\r\n                if (peg$silentFails === 0) {\r\n                    peg$fail(peg$c82);\r\n                }\r\n            }\r\n            if (s2 !== peg$FAILED) {\r\n                s3 = [];\r\n                if (peg$c83.test(input.charAt(peg$currPos))) {\r\n                    s4 = input.charAt(peg$currPos);\r\n                    peg$currPos++;\r\n                }\r\n                else {\r\n                    s4 = peg$FAILED;\r\n                    if (peg$silentFails === 0) {\r\n                        peg$fail(peg$c84);\r\n                    }\r\n                }\r\n                while (s4 !== peg$FAILED) {\r\n                    s3.push(s4);\r\n                    if (peg$c83.test(input.charAt(peg$currPos))) {\r\n                        s4 = input.charAt(peg$currPos);\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c84);\r\n                        }\r\n                    }\r\n                }\r\n                if (s3 !== peg$FAILED) {\r\n                    s2 = [s2, s3];\r\n                    s1 = s2;\r\n                }\r\n                else {\r\n                    peg$currPos = s1;\r\n                    s1 = peg$FAILED;\r\n                }\r\n            }\r\n            else {\r\n                peg$currPos = s1;\r\n                s1 = peg$FAILED;\r\n            }\r\n            if (s1 !== peg$FAILED) {\r\n                peg$savedPos = s0;\r\n                s1 = peg$c85(s1);\r\n            }\r\n            s0 = s1;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c77);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function peg$parseargName() {\r\n        var s0, s1, s2, s3, s4;\r\n        peg$silentFails++;\r\n        s0 = peg$currPos;\r\n        s1 = [];\r\n        s2 = peg$currPos;\r\n        s3 = peg$currPos;\r\n        peg$silentFails++;\r\n        s4 = peg$parsepatternWhiteSpace();\r\n        if (s4 === peg$FAILED) {\r\n            s4 = peg$parsepatternSyntax();\r\n        }\r\n        peg$silentFails--;\r\n        if (s4 === peg$FAILED) {\r\n            s3 = undefined;\r\n        }\r\n        else {\r\n            peg$currPos = s3;\r\n            s3 = peg$FAILED;\r\n        }\r\n        if (s3 !== peg$FAILED) {\r\n            if (input.length > peg$currPos) {\r\n                s4 = input.charAt(peg$currPos);\r\n                peg$currPos++;\r\n            }\r\n            else {\r\n                s4 = peg$FAILED;\r\n                if (peg$silentFails === 0) {\r\n                    peg$fail(peg$c11);\r\n                }\r\n            }\r\n            if (s4 !== peg$FAILED) {\r\n                s3 = [s3, s4];\r\n                s2 = s3;\r\n            }\r\n            else {\r\n                peg$currPos = s2;\r\n                s2 = peg$FAILED;\r\n            }\r\n        }\r\n        else {\r\n            peg$currPos = s2;\r\n            s2 = peg$FAILED;\r\n        }\r\n        if (s2 !== peg$FAILED) {\r\n            while (s2 !== peg$FAILED) {\r\n                s1.push(s2);\r\n                s2 = peg$currPos;\r\n                s3 = peg$currPos;\r\n                peg$silentFails++;\r\n                s4 = peg$parsepatternWhiteSpace();\r\n                if (s4 === peg$FAILED) {\r\n                    s4 = peg$parsepatternSyntax();\r\n                }\r\n                peg$silentFails--;\r\n                if (s4 === peg$FAILED) {\r\n                    s3 = undefined;\r\n                }\r\n                else {\r\n                    peg$currPos = s3;\r\n                    s3 = peg$FAILED;\r\n                }\r\n                if (s3 !== peg$FAILED) {\r\n                    if (input.length > peg$currPos) {\r\n                        s4 = input.charAt(peg$currPos);\r\n                        peg$currPos++;\r\n                    }\r\n                    else {\r\n                        s4 = peg$FAILED;\r\n                        if (peg$silentFails === 0) {\r\n                            peg$fail(peg$c11);\r\n                        }\r\n                    }\r\n                    if (s4 !== peg$FAILED) {\r\n                        s3 = [s3, s4];\r\n                        s2 = s3;\r\n                    }\r\n                    else {\r\n                        peg$currPos = s2;\r\n                        s2 = peg$FAILED;\r\n                    }\r\n                }\r\n                else {\r\n                    peg$currPos = s2;\r\n                    s2 = peg$FAILED;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            s1 = peg$FAILED;\r\n        }\r\n        if (s1 !== peg$FAILED) {\r\n            s0 = input.substring(s0, peg$currPos);\r\n        }\r\n        else {\r\n            s0 = s1;\r\n        }\r\n        peg$silentFails--;\r\n        if (s0 === peg$FAILED) {\r\n            s1 = peg$FAILED;\r\n            if (peg$silentFails === 0) {\r\n                peg$fail(peg$c86);\r\n            }\r\n        }\r\n        return s0;\r\n    }\r\n    function insertLocation() {\r\n        return options && options.captureLocation ? {\r\n            location: location()\r\n        } : {};\r\n    }\r\n    peg$result = peg$startRuleFunction();\r\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\r\n        return peg$result;\r\n    }\r\n    else {\r\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\r\n            peg$fail(peg$endExpectation());\r\n        }\r\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\r\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\r\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\r\n    }\r\n}\r\nexport var parse = peg$parse;\r\n","import { isPluralElement, isLiteralElement, isSelectElement, } from './types';\r\nimport { parse } from './parser';\r\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\r\n/**\r\n * Whether to convert `#` in plural rule options\r\n * to `{var, number}`\r\n * @param el AST Element\r\n * @param pluralStack current plural stack\r\n */\r\nexport function normalizeHashtagInPlural(els) {\r\n    els.forEach(function (el) {\r\n        // If we're encountering a plural el\r\n        if (!isPluralElement(el) && !isSelectElement(el)) {\r\n            return;\r\n        }\r\n        // Go down the options and search for # in any literal element\r\n        Object.keys(el.options).forEach(function (id) {\r\n            var _a;\r\n            var opt = el.options[id];\r\n            // If we got a match, we have to split this\r\n            // and inject a NumberElement in the middle\r\n            var matchingLiteralElIndex = -1;\r\n            var literalEl = undefined;\r\n            for (var i = 0; i < opt.value.length; i++) {\r\n                var el_1 = opt.value[i];\r\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\r\n                    matchingLiteralElIndex = i;\r\n                    literalEl = el_1;\r\n                    break;\r\n                }\r\n            }\r\n            if (literalEl) {\r\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\r\n                var newEls = parse(newValue);\r\n                (_a = opt.value).splice.apply(_a, [matchingLiteralElIndex, 1].concat(newEls));\r\n            }\r\n            normalizeHashtagInPlural(opt.value);\r\n        });\r\n    });\r\n}\r\n","import { parse as pegParse } from './parser';\r\nimport { normalizeHashtagInPlural } from './normalize';\r\nexport * from './types';\r\nexport * from './parser';\r\nexport function parse(input, opts) {\r\n    var els = pegParse(input, opts);\r\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\r\n        normalizeHashtagInPlural(els);\r\n    }\r\n    return els;\r\n}\r\n","/*\r\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\r\nCopyrights licensed under the New BSD License.\r\nSee the accompanying LICENSE file for terms.\r\n*/\r\n// -- Utilities ----------------------------------------------------------------\r\nfunction getCacheId(inputs) {\r\n    return JSON.stringify(inputs.map(function (input) {\r\n        return input && typeof input === 'object' ? orderedProps(input) : input;\r\n    }));\r\n}\r\nfunction orderedProps(obj) {\r\n    return Object.keys(obj)\r\n        .sort()\r\n        .map(function (k) {\r\n        var _a;\r\n        return (_a = {}, _a[k] = obj[k], _a);\r\n    });\r\n}\r\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\r\n    if (cache === void 0) { cache = {}; }\r\n    return function () {\r\n        var _a;\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var cacheId = getCacheId(args);\r\n        var format = cacheId && cache[cacheId];\r\n        if (!format) {\r\n            format = new ((_a = FormatConstructor).bind.apply(_a, [void 0].concat(args)))();\r\n            if (cacheId) {\r\n                cache[cacheId] = format;\r\n            }\r\n        }\r\n        return format;\r\n    };\r\n};\r\nexport default memoizeFormatConstructor;\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement, } from 'intl-messageformat-parser';\nvar ESCAPE_HASH_REGEX = /\\\\#/g;\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value.replace(ESCAPE_HASH_REGEX, '#'),\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value.replace(ESCAPE_HASH_REGEX, '#'),\n            });\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: 1 /* argument */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(.*?)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return (objectParts[c] != null ? objectParts[c] : c); })\n        .reduce(function (all, c) {\n        if (!all.length) {\n            all.push(c);\n        }\n        else if (typeof c === 'string' &&\n            typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += c;\n        }\n        else {\n            all.push(c);\n        }\n        return all;\n    }, []);\n}\nexport function formatXMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!~formattedMessage.indexOf('<')) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    // XML, not HTML since HTMl is strict about self-closing tag\n    var dom = domParser.parseFromString(\"<template>\" + formattedMessage + \"</template>\", 'application/xml');\n    if (dom.getElementsByTagName('parsererror').length) {\n        throw new FormatError(\"Malformed XML message \" + dom.getElementsByTagName('parsererror')[0].innerHTML);\n    }\n    var content = dom.firstChild;\n    if (!content) {\n        throw new FormatError(\"Malformed XML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!dom.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var childNodes = Array.prototype.slice.call(content.childNodes);\n    return childNodes.reduce(function (reconstructedChunks, _a) {\n        var tagName = _a.tagName, outerHTML = _a.outerHTML, textContent = _a.textContent;\n        // Regular text\n        if (!tagName) {\n            var chunks = restoreRichPlaceholderMessage(textContent || '', objectParts);\n            return reconstructedChunks.concat(chunks);\n        }\n        // Legacy HTML\n        if (!values[tagName]) {\n            var chunks = restoreRichPlaceholderMessage(outerHTML, objectParts);\n            if (chunks.length === 1) {\n                return reconstructedChunks.concat([chunks[0]]);\n            }\n            return reconstructedChunks.concat(chunks);\n        }\n        // XML Tag replacement\n        var formatFnOrValue = values[tagName];\n        if (typeof formatFnOrValue === 'function') {\n            if (textContent == null) {\n                return reconstructedChunks.concat([\n                    formatFnOrValue(textContent || undefined),\n                ]);\n            }\n            var chunks = restoreRichPlaceholderMessage(textContent, objectParts);\n            return reconstructedChunks.concat([formatFnOrValue.apply(void 0, chunks)]);\n        }\n        return reconstructedChunks.concat([formatFnOrValue]);\n    }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { parse, isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement, } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatXMLMessage, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction resolveLocale(locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    try {\n        return Intl.NumberFormat.supportedLocalesOf(locales, {\n            // IE11 localeMatcher `lookup` seems to convert `en` -> `en-US`\n            // but not other browsers,\n            localeMatcher: 'best fit',\n        })[0];\n    }\n    catch (e) {\n        return IntlMessageFormat.defaultLocale;\n    }\n}\n// TODO(skeleton): add skeleton support\nfunction prewarmFormatters(els, locales, formatters, formats) {\n    els\n        .filter(function (el) { return !isArgumentElement(el) && !isLiteralElement(el); })\n        .forEach(function (el) {\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            formatters.getNumberFormat(locales, style);\n        }\n        if (isSelectElement(el)) {\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n        if (isPluralElement(el)) {\n            formatters.getPluralRules(locales, { type: el.pluralType });\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n    });\n}\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign({}, (c1 || {}), (c2 || {}), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign({}, c1[k], (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatXMLMessage = function (values) {\n            return formatXMLMessage(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({ locale: _this.locale }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message);\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locale = resolveLocale(locales || []);\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n        prewarmFormatters(this.ast, this.locale, this.formatters, this.formats);\n    }\n    IntlMessageFormat.defaultLocale = 'en';\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport IntlMessageFormat from './core';\nexport * from './formatters';\nexport * from './core';\nexport default IntlMessageFormat;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport IntlMessageFormat from 'intl-messageformat';\nimport memoizeIntlConstructor from 'intl-format-cache';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nimport * as invariant_ from 'invariant';\nconst invariant = invariant_.default || invariant_;\nconst ESCAPED_CHARS = {\n    38: '&amp;',\n    62: '&gt;',\n    60: '&lt;',\n    34: '&quot;',\n    39: '&#x27;',\n};\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, match => ESCAPED_CHARS[match.charCodeAt(0)]);\n}\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (props.hasOwnProperty(name)) {\n            filtered[name] = props[name];\n        }\n        else if (defaults.hasOwnProperty(name)) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function createError(message, exception) {\n    const eMsg = exception ? `\\n${exception.stack}` : '';\n    return `[React Intl] ${message}${eMsg}`;\n}\nexport function defaultErrorHandler(error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n}\nexport const DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache = createIntlCache()) {\n    return {\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n        getRelativeTimeFormat: memoizeIntlConstructor(Intl.RelativeTimeFormat, cache.relativeTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\n","import * as React from 'react';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = require('hoist-non-react-statics');\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\n    const WithIntl = props => (React.createElement(IntlConsumer, null, intl => {\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        return (React.createElement(WrappedComponent, Object.assign({}, props, {\n            [intlPropName]: intl,\n        }, { ref: forwardRef ? props.forwardedRef : null })));\n    }));\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","import * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n})(DisplayName || (DisplayName = {}));\nexport default function createFormattedComponent(name) {\n    const Component = props => (React.createElement(Context.Consumer, null, intl => {\n        invariantIntlContext(intl);\n        const formattedValue = intl[name](props.value, props);\n        if (typeof props.children === 'function') {\n            return props.children(formattedValue);\n        }\n        const Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    }));\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nimport * as invariant_ from 'invariant';\nconst invariant = invariant_.default || invariant_;\nimport { createError, escape, filterProps } from './utils';\nimport { TYPE } from 'intl-messageformat-parser';\nconst DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n];\nconst NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n];\nconst RELATIVE_FORMAT_OPTIONS = [\n    'numeric',\n    'style',\n];\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nfunction getNamedFormat(formats, type, name, onError) {\n    const formatType = formats && formats[type];\n    let format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(createError(`No ${type} format named: ${name}`));\n}\n/**\n * Escape a raw msg when we run in prod mode\n * https://github.com/formatjs/formatjs/blob/master/packages/intl-messageformat-parser/src/parser.pegjs#L155\n */\nfunction escapeUnformattedMessage(msg) {\n    return msg.replace(/'\\{(.*?)\\}'/g, `{$1}`);\n}\nexport function formatDate({ locale, formats, onError, timeZone, }, state, ...[value, options = {}]) {\n    const { format } = options;\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'date', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    const date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    }\n    catch (e) {\n        onError(createError('Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime({ locale, formats, onError, timeZone, }, state, ...[value, options = {}]) {\n    const { format } = options;\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'time', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (!filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = Object.assign({}, filteredOptions, { hour: 'numeric', minute: 'numeric' });\n    }\n    const date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    }\n    catch (e) {\n        onError(createError('Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatRelativeTime({ locale, formats, onError, }, state, ...[value, unit = 'second', options = {}]) {\n    const { format } = options;\n    let defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    let filteredOptions = filterProps(options, RELATIVE_FORMAT_OPTIONS, defaults);\n    try {\n        return state\n            .getRelativeTimeFormat(locale, filteredOptions)\n            .format(value, unit);\n    }\n    catch (e) {\n        onError(createError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\nexport function formatNumber({ locale, formats, onError, }, state, ...[value, options = {}]) {\n    const { format } = options;\n    let defaults = (format && getNamedFormat(formats, 'number', format, onError)) || {};\n    let filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getNumberFormat(locale, filteredOptions).format(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatPlural({ locale, onError }, state, ...[value, options = {}]) {\n    let filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return state.getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\nexport function formatMessage({ locale, formats, messages, defaultLocale, defaultFormats, onError, }, state, messageDescriptor = { id: '' }, values = {}) {\n    const { id, defaultMessage } = messageDescriptor;\n    // `id` is a required field of a Message Descriptor.\n    invariant(id, '[React Intl] An `id` must be provided to format a message.');\n    const message = messages && messages[id];\n    const hasValues = Object.keys(values).length > 0;\n    // Avoid expensive message formatting for simple messages without values. In\n    // development messages will always be formatted in case of missing values.\n    if (!hasValues && process.env.NODE_ENV === 'production') {\n        const val = message || defaultMessage || id;\n        if (typeof val === 'string') {\n            return escapeUnformattedMessage(val);\n        }\n        invariant(val.length === 1 && val[0].type === TYPE.literal, 'Message has placeholders but no values was provided');\n        return val[0].value;\n    }\n    let formattedMessageParts = [];\n    if (message) {\n        try {\n            let formatter = state.getMessageFormat(message, locale, formats, {\n                formatters: state,\n            });\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : ''), e));\n        }\n    }\n    else {\n        // This prevents warnings from littering the console in development\n        // when no `messages` are passed into the <IntlProvider> for the\n        // default locale, and a default message is in the source.\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            onError(createError(`Missing message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : '')));\n        }\n    }\n    if (!formattedMessageParts.length && defaultMessage) {\n        try {\n            let formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting the default message for: \"${id}\"`, e));\n        }\n    }\n    if (!formattedMessageParts.length) {\n        onError(createError(`Cannot format message: \"${id}\", ` +\n            `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`));\n        if (typeof message === 'string') {\n            return message || defaultMessage || id;\n        }\n        return defaultMessage || id;\n    }\n    if (formattedMessageParts.length === 1 &&\n        typeof formattedMessageParts[0] === 'string') {\n        return formattedMessageParts[0] || defaultMessage || id;\n    }\n    return formattedMessageParts;\n}\nexport function formatHTMLMessage(config, state, messageDescriptor = { id: '' }, rawValues = {}) {\n    // Process all the values before they are used when formatting the ICU\n    // Message string. Since the formatted message might be injected via\n    // `innerHTML`, all String-based values need to be HTML-escaped.\n    let escapedValues = Object.keys(rawValues).reduce((escaped, name) => {\n        let value = rawValues[name];\n        escaped[name] = typeof value === 'string' ? escape(value) : value;\n        return escaped;\n    }, {});\n    return formatMessage(config, state, messageDescriptor, escapedValues);\n}\nexport const formatters = {\n    formatNumber,\n    formatDate,\n    formatTime,\n    formatMessage,\n    formatPlural,\n    formatHTMLMessage,\n    formatRelativeTime,\n};\n","/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nexport default function areIntlLocalesSupported(locales, constructorsToCheck) {\r\n    if (typeof Intl === 'undefined') {\r\n        return false;\r\n    }\r\n    if (!locales) {\r\n        throw new Error('locales must be supplied.');\r\n    }\r\n    if (!Array.isArray(locales)) {\r\n        locales = [locales];\r\n    }\r\n    // Per https://github.com/formatjs/formatjs/issues/151\r\n    if (!constructorsToCheck) {\r\n        constructorsToCheck = [\r\n            Intl.DateTimeFormat,\r\n            Intl.NumberFormat,\r\n            Intl.PluralRules,\r\n        ];\r\n    }\r\n    var intlConstructors = constructorsToCheck.filter(Boolean);\r\n    if (intlConstructors.length === 0) {\r\n        return false;\r\n    }\r\n    return intlConstructors.every(function (intlConstructor) {\r\n        return intlConstructor.supportedLocalesOf(locales).length === locales.length;\r\n    });\r\n}\r\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { createError, DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatRelativeTime, formatDate, formatTime, formatPlural, formatHTMLMessage, formatMessage, } from '../format';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nconst shallowEquals = require('shallow-equal/objects');\nfunction filterIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n    };\n}\nexport default class IntlProvider extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.cache = createIntlCache();\n        this.state = {\n            cache: this.cache,\n            intl: createIntl(filterIntlConfig(this.props), this.cache),\n            prevConfig: filterIntlConfig(this.props),\n        };\n    }\n    static getDerivedStateFromProps(props, { prevConfig, cache }) {\n        const config = filterIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    }\n    render() {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    }\n}\nIntlProvider.displayName = 'IntlProvider';\nIntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    const formatters = createFormatters(cache);\n    const resolvedConfig = Object.assign({}, DEFAULT_INTL_CONFIG, config);\n    if (!resolvedConfig.locale ||\n        !areIntlLocalesSupported(resolvedConfig.locale)) {\n        const { locale, defaultLocale, onError } = resolvedConfig;\n        if (typeof onError === 'function') {\n            onError(createError(`Missing locale data for locale: \"${locale}\". ` +\n                `Using default locale: \"${defaultLocale}\" as fallback.`));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    return Object.assign({}, resolvedConfig, { formatters, formatNumber: formatNumber.bind(undefined, resolvedConfig, formatters), formatRelativeTime: formatRelativeTime.bind(undefined, resolvedConfig, formatters), formatDate: formatDate.bind(undefined, resolvedConfig, formatters), formatTime: formatTime.bind(undefined, resolvedConfig, formatters), formatPlural: formatPlural.bind(undefined, resolvedConfig, formatters), formatMessage: formatMessage.bind(undefined, resolvedConfig, formatters), formatHTMLMessage: formatHTMLMessage.bind(undefined, resolvedConfig, formatters) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nimport * as invariant_ from 'invariant';\nconst invariant = invariant_.default || invariant_;\nconst MINUTE = 60;\nconst HOUR = 60 * 60;\nconst DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    const absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nconst INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit = 'second') {\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nfunction verifyProps(updateIntervalInSeconds, unit) {\n    invariant(!updateIntervalInSeconds || (updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n}\nexport class FormattedRelativeTime extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        // Public for testing\n        this._updateTimer = null;\n        this.state = {\n            prevUnit: this.props.unit,\n            prevValue: this.props.value,\n            currentValueInSeconds: canIncrement(this.props.unit)\n                ? valueToSeconds(this.props.value, this.props.unit)\n                : 0,\n        };\n        verifyProps(props.updateIntervalInSeconds, props.unit);\n    }\n    scheduleNextUpdate({ updateIntervalInSeconds, unit }, { currentValueInSeconds }) {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        const nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        const nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        const unitDuration = getDurationInSeconds(nextUnit);\n        const remainder = nextValueInSeconds % unitDuration;\n        const prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        const nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        const delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(() => this.setState({\n            currentValueInSeconds: nextInterestingValueInSeconds,\n        }), delayInSeconds * 1e3);\n    }\n    componentDidMount() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentDidUpdate() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentWillUnmount() {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (React.createElement(Context.Consumer, null, intl => {\n            invariantIntlContext(intl);\n            const { formatRelativeTime, textComponent: Text } = intl;\n            const { children, value, unit, updateIntervalInSeconds } = this.props;\n            const { currentValueInSeconds } = this.state;\n            let currentValue = value || 0;\n            let currentUnit = unit;\n            if (canIncrement(unit) &&\n                currentValueInSeconds &&\n                updateIntervalInSeconds) {\n                currentUnit = selectUnit(currentValueInSeconds);\n                const unitDuration = getDurationInSeconds(currentUnit);\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\n            }\n            const formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, Object.assign({}, this.props));\n            if (typeof children === 'function') {\n                return children(formattedRelativeTime);\n            }\n            if (Text) {\n                return React.createElement(Text, null, formattedRelativeTime);\n            }\n            return formattedRelativeTime;\n        }));\n    }\n}\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nFormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second',\n};\nexport default FormattedRelativeTime;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    let pluralCategory = formatPlural(value, props);\n    let formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { formatMessage as baseFormatMessage } from '../format';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nconst shallowEquals = require('shallow-equal/objects');\nconst defaultFormatMessage = (descriptor, values) => {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return baseFormatMessage(Object.assign({}, DEFAULT_INTL_CONFIG, { locale: 'en' }), createFormatters(), descriptor, values);\n};\nclass FormattedMessage extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        return (React.createElement(Context.Consumer, null, intl => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = intl || {};\n            const { id, description, defaultMessage, values, children, tagName: Component = Text, } = this.props;\n            const descriptor = { id, description, defaultMessage };\n            let nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(...nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement(Component, null, ...nodes);\n            }\n            return nodes;\n        }));\n    }\n}\nFormattedMessage.displayName = 'FormattedMessage';\nFormattedMessage.defaultProps = {\n    values: {},\n};\nexport default FormattedMessage;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport FormattedMessage from './message';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nclass FormattedHTMLMessage extends FormattedMessage {\n    render() {\n        return (React.createElement(Context.Consumer, null, intl => {\n            if (!this.props.defaultMessage) {\n                invariantIntlContext(intl);\n            }\n            const { formatHTMLMessage, textComponent: Text } = intl;\n            const { id, description, defaultMessage, values: rawValues, \n            // This is bc of TS3.3 doesn't recognize `defaultProps`\n            tagName: Component = Text || 'span', children, } = this.props;\n            let descriptor = { id, description, defaultMessage };\n            let formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n            if (typeof children === 'function') {\n                return children(formattedHTMLMessage);\n            }\n            // Since the message presumably has HTML in it, we need to set\n            // `innerHTML` in order for it to be rendered and not escaped by React.\n            // To be safe, all string prop values were escaped when formatting the\n            // message. It is assumed that the message is not UGC, and came from the\n            // developer making it more like a template.\n            //\n            // Note: There's a perf impact of using this component since there's no\n            // way for React to do its virtual DOM diffing.\n            const html = { __html: formattedHTMLMessage };\n            return React.createElement(Component, { dangerouslySetInnerHTML: html });\n        }));\n    }\n}\nFormattedHTMLMessage.displayName = 'FormattedHTMLMessage';\nFormattedHTMLMessage.defaultProps = Object.assign({}, FormattedMessage.defaultProps, { tagName: 'span' });\nexport default FormattedHTMLMessage;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nexport { default as defineMessages } from './define-messages';\nimport createFormattedComponent from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\nexport const FormattedDate = createFormattedComponent('formatDate');\nexport const FormattedTime = createFormattedComponent('formatTime');\nexport const FormattedNumber = createFormattedComponent('formatNumber');\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { default as FormattedHTMLMessage } from './components/html-message';\nexport { createIntlCache } from './utils';\n"],"names":["defineMessages","messageDescriptors","TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","SyntaxError","_super","message","expected","found","location","_this","name","Error","captureStackTrace","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","text","escapedParts","parts","map","part","isArray","inverted","description","describeExpected","expected1","descriptions","j","sort","slice","join","describeFound","found1","peg$parse","input","options","undefined","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","messageText","value","insertLocation","peg$c2","peg$otherExpectation","peg$c3","peg$c4","peg$literalExpectation","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$classExpectation","peg$c11","peg$anyExpectation","peg$c12","peg$c13","peg$c14","peg$c15","option","peg$c16","peg$c17","stem","peg$c18","tokens","peg$c19","peg$c20","peg$c21","skeleton","peg$c22","style","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","pattern","peg$c37","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","pluralType","offset","reduce","all","_a","id","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","negative","num","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","peg$c72","peg$c73","escapedChar","quotedChars","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","digits","parseInt","peg$c86","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","peg$computeLocation","text1","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","end","peg$fail","push","peg$buildStructuredError","location1","s0","peg$parsemessage","s1","peg$parsemessageElement","peg$parseliteralElement","peg$parseargumentElement","peg$parsesimpleFormatElement","peg$parsepluralElement","peg$parseselectElement","peg$parsemessageText","s2","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","s3","s4","s5","peg$parse_","peg$parseargNameOrNumber","peg$parsenumberSkeletonId","peg$parsepatternWhiteSpace","test","charAt","substring","peg$parsenumberSkeletonTokenOption","peg$parsenumberSkeletonToken","peg$parsenumberSkeleton","peg$parsenumberArgStyle","substr","peg$parsenumberFormatElement","s6","s7","s8","s9","s10","s11","s12","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","peg$parseselectOption","peg$parsepluralRuleSelectValue","peg$parseargName","peg$parsepatternSyntax","peg$parseargNumber","captureLocation","parse","PLURAL_HASHTAG_REGEX","normalizeHashtagInPlural","els","forEach","keys","opt","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","concat","opts","pegParse","getCacheId","inputs","JSON","stringify","orderedProps","obj","k","memoizeFormatConstructor","FormatConstructor","cache","args","_i","cacheId","format","bind","ESCAPE_HASH_REGEX","FormatError","msg","variableId","mergeLiteral","lastPart","formatToParts","locales","formatters","formats","values","originalMessage","result","els_1","varName","String","getDateTimeFormat","getNumberFormat","other","RangeError","rule","getPluralRules","formatToString","domParser","TOKEN_DELIMITER","TOKEN_REGEX","counter","generateId","Date","now","restoreRichPlaceholderMessage","objectParts","split","filter","Boolean","c","formatXMLMessage","formattedMessage","indexOf","DOMParser","dom","parseFromString","getElementsByTagName","innerHTML","content","firstChild","tagsToFormat","childNodes","reconstructedChunks","tagName","outerHTML","textContent","chunks","formatFnOrValue","resolveLocale","Intl","NumberFormat","supportedLocalesOf","localeMatcher","e","IntlMessageFormat","defaultLocale","prewarmFormatters","mergeConfig","c1","c2","mergeConfigs","defaultConfig","configs","createDefaultFormatters","dateTime","pluralRules","memoizeIntlConstructor","DateTimeFormat","PluralRules","overrideFormats","formatterCache","ast","locale","resolvedOptions","getAst","__parse","TypeError","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","NODE_ENV","process","env","invariant","condition","a","f","error","argIndex","framesToPop","module","invariant_","ESCAPED_CHARS","UNSAFE_CHARS_REGEX","escape","str","match","filterProps","props","whitelist","defaults","filtered","invariantIntlContext","intl","createError","exception","eMsg","stack","defaultErrorHandler","console","DEFAULT_INTL_CONFIG","messages","timeZone","textComponent","React","defaultFormats","onError","createIntlCache","relativeTime","createFormatters","getMessageFormat","getRelativeTimeFormat","RelativeTimeFormat","hoistNonReactStatics","require","getDisplayName","Component","displayName","IntlContext","IntlConsumer","Consumer","IntlProvider","Provider","Context","injectIntl","WrappedComponent","intlPropName","forwardRef","enforceContext","WithIntl","ref","forwardedRef","DisplayName","createFormattedComponent","formattedValue","children","Text","useIntl","useContext","DATE_TIME_FORMAT_OPTIONS","NUMBER_FORMAT_OPTIONS","RELATIVE_FORMAT_OPTIONS","PLURAL_FORMAT_OPTIONS","getNamedFormat","formatType","escapeUnformattedMessage","formatDate","state","filteredOptions","formatTime","formatRelativeTime","unit","formatNumber","formatPlural","formatMessage","messageDescriptor","defaultMessage","hasValues","val","formattedMessageParts","formatter","toLowerCase","formatHTMLMessage","config","rawValues","escapedValues","escaped","areIntlLocalesSupported","constructorsToCheck","intlConstructors","every","intlConstructor","shallowEquals","filterIntlConfig","createIntl","prevConfig","defaultProps","resolvedConfig","MINUTE","HOUR","DAY","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","verifyProps","updateIntervalInSeconds","FormattedRelativeTime","_updateTimer","prevUnit","prevValue","currentValueInSeconds","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","remainder","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","scheduleNextUpdate","currentValue","currentUnit","round","formattedRelativeTime","FormattedPlural","pluralCategory","formattedPlural","withIntl","__rest","getOwnPropertySymbols","defaultFormatMessage","descriptor","baseFormatMessage","FormattedMessage","nextProps","otherProps","nextValues","nextOtherProps","nodes","FormattedHTMLMessage","formattedHTMLMessage","html","__html","dangerouslySetInnerHTML","FormattedDate","FormattedTime","FormattedNumber"],"mappings":"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"}